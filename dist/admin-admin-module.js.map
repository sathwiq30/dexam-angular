{"version":3,"sources":["./src/app/admin/add/add.component.ts","./src/app/admin/add/add.component.html","./src/app/admin/adduser/adduser.component.ts","./src/app/admin/adduser/adduser.component.html","./src/app/admin/admin-routing.module.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/admin/admin.module.ts","./src/app/admin/auth.guard.ts","./src/app/admin/customers/customers.component.ts","./src/app/admin/customers/customers.component.html","./src/app/admin/dashboard/dashboard.component.ts","./src/app/admin/dashboard/dashboard.component.html","./src/app/admin/helpcenter/helpcenter.component.ts","./src/app/admin/helpcenter/helpcenter.component.html","./src/app/admin/helpcenter/helpdetails/helpdetails.component.ts","./src/app/admin/helpcenter/helpdetails/helpdetails.component.html","./src/app/admin/jobs.guard.ts","./src/app/admin/login/login.component.ts","./src/app/admin/login/login.component.html","./src/app/admin/settings/settings.component.ts","./src/app/admin/settings/settings.component.html","./src/app/admin/studentdetails/studentdetails.component.ts","./src/app/admin/studentdetails/studentdetails.component.html","./src/app/admin/tutors/tutors.component.ts","./src/app/admin/tutors/tutors.component.html","./src/app/admin/users/users.component.ts","./src/app/admin/users/users.component.html","./src/app/admin/usersdetails/usersdetails.component.ts","./src/app/admin/usersdetails/usersdetails.component.html"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\nimport { AuthGuard } from '../auth.guard';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.scss']\n})\nexport class AddComponent implements OnInit {\n\n  constructor( private http: HttpClient,   private auth : AuthGuard, private tostr : ToastrService) { }\n  selected =-1\n  classes  =[]\n  standard = false\n  data\n  which\n  ngOnInit(): void {\n   this.getData()\n    // this.http.get('https://namasteguru.herokuapp.com/api/getclasses', )\n    // .toPromise()\n    // .then((succ: any )=>{\n    //   console.log(succ)  \n    //   this.isLoading = false\n    //   this.classes = succ.data\n    // }\n    // )\n    // .catch(err=> console.log(err))\n\n  }\n\n  getData(){\n\n    this.http.get('https://namasteguru.herokuapp.com/api/admin/getallslots', )\n    .toPromise()\n    .then((succ: any )=>{\n      console.log(succ)    \n      this.classes = succ.message.classes\n      this.data = succ.message \n\n    }\n    )\n    .catch(err=> console.log(err))\n  }\n  isLoading\n  onAddClass(form  : NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n  })\n  const httpOptions = {\n    headers: headers_object\n  };\n    this.isLoading = true;\n    this.http.post('https://namasteguru.herokuapp.com/api/admin/add/class',\n    {  \"class\": form.value.email,   \n    },\n    httpOptions)\n    .toPromise()\n    .then((succ: any )=>{ \n      this.tostr.success('added succesfully')\n      this.getData()\n      console.log(succ)  \n      this.isLoading = false\n    }\n    )\n    .catch(err=>{ console.log(err)\n      this.tostr.error('error')\n    })\n     \n  }\n  onAddQ(form  : NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n  })\n  const httpOptions = {\n    headers: headers_object\n  };    \n  let formData = new FormData()\n  formData.append( 'helpcenter[0][questions]', form.value.name) \n    this.isLoading = true;\n    this.http.post('https://namasteguru.herokuapp.com/api/admin/add/slots',\n     formData,\n    httpOptions)\n    .toPromise()\n    .then((succ: any )=>{this.tostr.success('added succesfully')\n     this.getData()\n      console.log(succ)  \n      this.isLoading = false\n    }\n    )\n    .catch(err=>{ console.log(err)\n      this.tostr.error('error')\n    })\n     \n  }\n  onAddM(form  : NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n  })\n  const httpOptions = {\n    headers: headers_object\n  };    \n  let formData = new FormData()\n  formData.append( 'medium[0][language]', form.value.name) \n    this.isLoading = true;\n    this.http.post('https://namasteguru.herokuapp.com/api/admin/add/slots',\n     formData,\n    httpOptions)\n    .toPromise()\n    .then((succ: any )=>{\n      this.tostr.success('added succesfully')\n       this.getData()\n      console.log(succ)  \n      this.isLoading = false\n    }\n    )\n    .catch(err=>{ console.log(err)\n      this.tostr.error('error')\n    })\n     \n  }\n  onAddSlots(form  : NgForm) { \n    if (form.invalid) {\n      return;\n    }\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n  })\n  const httpOptions = {\n    headers: headers_object\n  };    \n  let formData = new FormData()\n  formData.append(form.value.type+'[0][name]', form.value.name)\n  if(form.value.start)\n    formData.append(form.value.type+'[0][start]', form.value.start)\n  if(form.value.end)\n    formData.append(form.value.type+'[0][end]', form.value.end)\n    this.isLoading = true;\n    this.http.post('https://namasteguru.herokuapp.com/api/admin/add/slots',\n     formData,\n    httpOptions)\n    .toPromise()\n    .then((succ: any )=>{\n      this.tostr.success('added succesfully') \n      this.getData()\n\n      console.log(succ)  \n      this.isLoading = false\n    }\n    )\n    .catch(err=>{ console.log(err)\n      this.tostr.error('error')\n    })\n     \n  }\n  onAddSt(form  : NgForm) { \n    if (form.invalid) {\n      return;\n    }\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n  })\n  const httpOptions = {\n    headers: headers_object\n  };    \n  let formData = new FormData()\n  formData.append( 'standard[0][name]', form.value.name) \n    this.isLoading = true;\n    this.http.post('https://namasteguru.herokuapp.com/api/admin/add/slots',\n     formData,\n    httpOptions)\n    .toPromise()\n    .then((succ: any )=>{ this.tostr.success('added succesfully')\n    this.getData()\n      console.log(succ)  \n      this.isLoading = false\n    }\n    )\n    .catch(err=>{ console.log(err)\n      this.tostr.error('error')\n    })\n     \n  }\n  onAddSubjects(form  : NgForm) {\n    if(form.value.pre){}\n      // console.log(form.value.pre)\n    else{\n      form.value.pre = false\n      // console.log(form.value.pre)\n    }\n    if (form.invalid) {\n      return;\n    }\n    console.log(this.classes[form.value.type]._id)\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n  })\n  const httpOptions = {\n    headers: headers_object\n  };  \n  let subject= []\n  subject.push({\n    name : form.value.email,\n    price : ''+form.value.price,\n    premium :  form.value.pre\n  }) \n    this.isLoading = true;\n    this.http.post('https://namasteguru.herokuapp.com/api/admin/add/'+this.classes[form.value.type]._id+'/subject',\n     {\n       subject\n     },\n    httpOptions)\n    .toPromise()\n    .then((succ: any )=>{\n      this.tostr.success('added succesfully')\n       this.getData()\n      console.log(succ)  \n      this.isLoading = false\n      this.selected =-1\n      form.reset()\n    }\n    )\n    .catch(err=>{ console.log(err)\n      this.tostr.error('error')\n    })\n     \n  }\n\n}\n","<div style=\"overflow-x: hidden;\">\n     \n  <br>\n     <div class=\"row\"  > \n         <mat-card class=\"col-10 col-md-8 ml-5 ml-md-0 ml-md-5 mr-2  \" style=\"min-height: 87vh;border-radius: 12px;\">\n          <h2 class=\"page-title\">Existing</h2> \n          <br><br> \n          <div  *ngIf=\"!which \">\n            choose something\n          </div>\n          <div  *ngIf=\"which ==  'slots'\">\n            <h3>  slots</h3>\n            <div  *ngIf=\"!standard \">\n              choose  a slot\n            </div>\n            <div  *ngIf=\"standard ==  'weekend'\">  \n              <p *ngFor=\"let item of   data.weekend\"> {{item.name}}</p>\n            </div>\n            <div  *ngIf=\"standard ==  'weekday'\">  \n               <p *ngFor=\"let item of   data.weekday\"> {{item.name}}</p>\n            </div>\n          </div>\n\n          <div *ngIf=\"which ==  'classes'\"> \n            <h3>  classes</h3>\n            <p *ngFor=\"let item of   data.classes\"> {{item.class}}</p>\n          </div>\n\n          <div *ngIf=\"which ==  'Subjects'\">\n            <h3>  Subjects</h3> \n            <div  *ngIf=\"selected >-1\">\n               \n              <p *ngFor=\"let item of  classes[selected].subject\"> {{item.name}}</p>\n    \n            </div>\n          </div>\n\n          <div  *ngIf=\"which ==  'Query'\">\n            <h3>  Help Center Query</h3>\n \n            <p *ngFor=\"let item of   data.questions\"> {{item }}</p>\n          </div>\n\n          <div   *ngIf=\"which ==  'Medium'\">\n            <h3>  Medium Language</h3>\n            <p *ngFor=\"let item of   data.medium\"> {{item }}</p>\n          </div>\n\n          <div  *ngIf =\"which ==  'standard'\" > \n            <h3>  Standard</h3>\n            <p *ngFor=\"let item of   data.standard\"> {{item }}</p>\n          </div>\n          \n        </mat-card>\n        <mat-card  class=\"col-10 col-md-3 ml-5 ml-md-0  mt-5 mt-md-0 \"  style=\"min-height: 87vh;border-radius: 12px; \">     \n         <h1>Manage</h1>\n         <br> \n         <mat-form-field   appearance=\"outline\"  >\n          <mat-label>data type</mat-label>\n          <mat-select name=\"dt\" ngModel   #dataInput=\"ngModel\"  required>\n            <mat-option value=\"slots\" (click)=\"which=  'slots'\">slots</mat-option>\n            <mat-option  value=\"slots\" (click)=\"which=  'classes'\">classes</mat-option>\n            <mat-option value=\"slots\" (click)=\"which=  'Subjects'\">Subjects</mat-option>\n            <mat-option value=\"slots\" (click)=\"which=  'Query'\"> Help Center Query</mat-option> \n            <mat-option value=\"slots\" (click)=\"which=  'Medium'\">Medium</mat-option> \n            <mat-option value=\"standard\" (click)=\"which=  'standard'\" >standard</mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"dataInput.invalid\">Please select a data Type.</mat-error>\n      \n        </mat-form-field><br> \n\n \n        <hr>\n          <div  *ngIf=\"which ==  'slots'\">\n            <h3>Add slots</h3>\n            <form (submit)=\"onAddSlots(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\" style=\"font-size: smaller;\">\n              <mat-form-field   appearance=\"outline\"  >\n                <mat-label>Slot Type</mat-label>\n                <mat-select name=\"type\" ngModel   #GenderInput=\"ngModel\"  required> \n                  <mat-option value=\"weekday\" (click)=\"standard=  'weekday'\"  >weekday</mat-option>\n                  <mat-option value=\"weekend\" (click)=\"standard=  'weekend'\">Weekend</mat-option>\n                  <mat-option value=\"specialclasses\" >special classes</mat-option> \n                </mat-select>\n                <mat-error *ngIf=\"GenderInput.invalid\">Please select a Slot Type.</mat-error>\n            \n              </mat-form-field><br> \n\n\n                <mat-form-field  appearance=\"outline\" >\n                  \n                  <mat-label>Name</mat-label><span matPrefix> <mat-icon></mat-icon></span>\n                  <input matInput name=\"name\"  maxlength=\"320\" minlength=\"1\" ngModel type=\"text\" placeholder=\"Ex : 6-7AM\"\n                  #emailInput=\"ngModel\"  required  >\n                  <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid slot.</mat-error>\n                </mat-form-field> \n                <p     >start and end are in 24 hour format </p>\n                <mat-form-field  appearance=\"outline\"  >\n                  \n                  <mat-label>Start</mat-label><span matPrefix> <mat-icon></mat-icon></span>\n                  <input matInput name=\"start\"  maxlength=\"320\" minlength=\"1\" ngModel type=\"number\" placeholder=\"Ex : 6\"\n                  #emInput=\"ngModel\"  required  >\n                  <mat-error *ngIf=\"emInput.invalid\">Please enter a valid start.</mat-error>\n                </mat-form-field> \n                <mat-form-field  appearance=\"outline\" >\n                  \n                  <mat-label>End</mat-label><span matPrefix> <mat-icon></mat-icon></span>\n                  <input matInput name=\"end\"  maxlength=\"320\" minlength=\"1\" ngModel type=\"number\" placeholder=\"Ex : 7\"\n                  #eInput=\"ngModel\"  required  >\n                  <mat-error *ngIf=\"eInput.invalid\">Please enter a valid end.</mat-error>\n                </mat-form-field> \n                <br><br>\n\n\n                <button mat-raised-button  color=\"primary\"\n                type=\"submit\" style=\"color: black; background-color:rgba(3, 94, 230, 0.52) !important;\"  >Submit</button>\n              </form> \n          </div>\n\n          <div *ngIf=\"which ==  'classes'\"> \n            <h3>Add classes</h3>\n            <form (submit)=\"onAddClass(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\" style=\"font-size: smaller;\">\n                <mat-form-field  appearance=\"outline\">\n                  \n                  <mat-label>subject</mat-label><span matPrefix> <mat-icon></mat-icon></span>\n                  <input matInput name=\"email\"  maxlength=\"320\" minlength=\"2\" ngModel type=\"text\" placeholder=\"subject\"\n                   #emailInput=\"ngModel\"  required  >\n                  <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid subject.</mat-error>\n                </mat-form-field> \n                <br><br> \n                <button mat-raised-button  color=\"primary\"\n                 type=\"submit\" style=\"color: black; background-color:rgba(3, 94, 230, 0.52) !important;\"  >Submit</button>\n              </form> \n          </div>\n\n\n          <div  *ngIf =\"which ==  'standard'\" > \n            <h3>Add Standard</h3>\n            <form (submit)=\"onAddSt(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\" style=\"font-size: smaller;\">\n               \n                <mat-form-field  appearance=\"outline\"  >\n                          \n                  <mat-label>Standard Name</mat-label><span matPrefix> <mat-icon></mat-icon></span>\n                  <input matInput name=\"name\"  maxlength=\"320\" minlength=\"1\" ngModel type=\"text\" placeholder=\"standard name\"\n                  #stInput=\"ngModel\"  required  >\n                  <mat-error *ngIf=\"stInput.invalid\">Please enter a valid standard name.</mat-error>\n                </mat-form-field> \n\n                <br><br> \n                <button mat-raised-button  color=\"primary\"\n                 type=\"submit\" style=\"color: black; background-color:rgba(3, 94, 230, 0.52) !important;\"  >Submit</button>\n              </form> \n          </div>\n\n          \n\n          <div *ngIf=\"which ==  'Subjects'\">\n            <h3>Add Subjects</h3> \n            <form (submit)=\"onAddSubjects(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\" style=\"font-size: smaller;\">\n              <mat-form-field   appearance=\"outline\"  >\n                <mat-label>Class</mat-label>\n                <mat-select name=\"type\" ngModel   #GendrInput=\"ngModel\"  required>\n                  \n                  <mat-option *ngFor=\"let item of classes;let i = index\" (click)=\"selected= i \" [value]=\"i\"  >\n                    {{item.class}}</mat-option> \n      \n                </mat-select>\n                <mat-error *ngIf=\"GendrInput.invalid\">Please select a Slot Type.</mat-error>\n      \n              </mat-form-field>\n             \n              <!-- <div  *ngIf=\"selected\">\n                Subjects   are :\n                <p *ngFor=\"let item of  classes[GendrInput.value].subject\"> {{item.name}}</p>\n      \n              </div> -->\n              <hr>\n                <mat-form-field  appearance=\"outline\"> \n                <mat-label>Name</mat-label><span matPrefix> <mat-icon></mat-icon></span>\n                  <input matInput name=\"email\"  maxlength=\"320\" minlength=\"2\" ngModel type=\"text\" placeholder=\"subject\"\n                   #emailInput=\"ngModel\"  required  >\n                  <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid subject.</mat-error>\n                </mat-form-field> \n                <br><br>  \n                <mat-form-field  appearance=\"outline\">\n                <mat-label>price</mat-label><span matPrefix> <mat-icon></mat-icon></span>\n                  <input matInput name=\"price\"  maxlength=\"320\" minlength=\"2\" ngModel type=\"text\" placeholder=\"price\"\n                   #emailInput=\"ngModel\"  required  >\n                  <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid price.</mat-error>\n                </mat-form-field>  \n                \n                 <mat-checkbox  name=\"pre\" ngModel #pInput=\"ngModel\" >Premium</mat-checkbox>\n                 <br><br> \n                <button mat-raised-button  color=\"primary\"\n                 type=\"submit\" style=\"color: black; background-color:rgba(3, 94, 230, 0.52) !important;\"  >Submit</button>\n      \n              </form>  \n          </div>\n\n          <div  *ngIf=\"which ==  'Query'\">\n            <h3>Add Help Center Query</h3>\n            <form (submit)=\"onAddQ(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\" style=\"font-size: smaller;\">\n              \n                <mat-form-field  appearance=\"outline\">\n                  \n                  <mat-label>Query</mat-label><span matPrefix> <mat-icon></mat-icon></span>\n                  <input matInput name=\"name\"  maxlength=\"320\" minlength=\"1\" ngModel type=\"text\" placeholder=\"Query\"\n                   #emailInput=\"ngModel\"  required  >\n                  <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid Query.</mat-error>\n                </mat-form-field> \n                 <br> \n        \n                <button mat-raised-button  color=\"primary\"\n                 type=\"submit\" style=\"color: black; background-color:rgba(3, 94, 230, 0.52) !important;\"  >Submit</button>\n              </form> \n\n          </div>\n\n          <div   *ngIf=\"which ==  'Medium'\">\n            <h3>Add Medium Language</h3>\n            <form (submit)=\"onAddM(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\" style=\"font-size: smaller;\">\n              \n                <mat-form-field  appearance=\"outline\">\n                  \n                  <mat-label>Name</mat-label><span matPrefix> <mat-icon></mat-icon></span>\n                  <input matInput name=\"name\"  maxlength=\"320\" minlength=\"1\" ngModel type=\"text\" placeholder=\"medium\"\n                   #emailInput=\"ngModel\"  required  >\n                  <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid medium.</mat-error>\n                </mat-form-field> \n                 <br> \n          \n                <button mat-raised-button  color=\"primary\"\n                 type=\"submit\" style=\"color: black; background-color:rgba(3, 94, 230, 0.52) !important;\"  >Submit</button>\n              </form> \n          </div>\n         </mat-card> \n    </div>\n    <br>\n\n</div>\n ","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthGuard } from '../auth.guard';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-adduser',\n  templateUrl: './adduser.component.html',\n  styleUrls: ['./adduser.component.scss']\n})\nexport class AdduserComponent implements OnInit {\n  isLoading = false\n  constructor( private http: HttpClient,   private auth : AuthGuard , private tostr : ToastrService) { }\nuid\n  ngOnInit(): void {\n    this.uid = this.auth.getDecoded()._id  \n    this.getData()\n  }\n  data\n  getData(){\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n  })\n  const httpOptions = {\n    headers: headers_object\n  }; \n    this.http.get('https://namasteguru.herokuapp.com/api/admin/admins', httpOptions)\n    .toPromise()\n    .then((succ: any )=>{\n      console.log(succ)     \n      this.data = succ.message \n\n    }\n    )\n    .catch(err=> console.log(err))\n  }\n  onAddSubjects(form  : NgForm) {\n    if (form.invalid) {\n      return;\n    } \n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n  })\n  const httpOptions = {\n    headers: headers_object\n  }; \n    this.isLoading = true;\n    this.http.post('https://namasteguru.herokuapp.com/api/admin/addadmin',\n     {\n        name : form.value.user,\n        email : form.value.email,\n        contact : form.value.number,\n        role : form.value.role\n     },\n    httpOptions)\n    .toPromise()\n    .then((succ: any )=>{ this.getData()\n      console.log(succ)  \n      this.isLoading = false \n      form.reset()\n      this.tostr.success('added successfully')\n    }\n    )\n    .catch(err=>{ console.log(err)\n      this.tostr.error('error')\n    })\n     \n  }\n\n  \n  activate(id){\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n  })\n  const httpOptions = {\n    headers: headers_object\n  }; \n  console.log(this.auth.getToken())\n  this.http.post('https://namasteguru.herokuapp.com/api/admin/unblockadmin/'+id  ,{},  httpOptions)\n  .toPromise()\n  .then((a: any)=>{ console.log(a)\n    this.getData( )\n    this.tostr.success('activated successfully')\n\n  }) \n  .catch(err=>{ console.log(err)\n    this.tostr.error('error')\n  })\n  \n  }\n  deactivate(id){\n    console.log(id)\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n    })\n    const httpOptions = {\n      headers: headers_object\n    };  \n    this.http.post('https://namasteguru.herokuapp.com/api/admin/blockadmin/'+id ,{},  httpOptions)\n    .toPromise()\n    .then((a: any)=>{ console.log(a)\n      this.getData( )\n      this.tostr.success('deactivated successfully')\n\n    }) \n    .catch(err=>{ console.log(err)\n      this.tostr.error('error')\n    })\n    \n  }\n}\n","<div style=\"overflow-x: hidden;\">\n     \n  <br>\n     <div class=\"row\"  > \n         <mat-card class=\"col-10 col-md-8 ml-5 ml-md-0 ml-md-5 mr-2  \" style=\"min-height: 87vh;border-radius: 12px;\">\n          <h2 class=\"page-title\">users List</h2> <br><br>\n          <div *ngFor=\"let item of   data \">\n            <div *ngIf=\"item._id !== uid \" > \n              <button *ngIf=\" item.blocked \"  class=\"btn  btn-success\" (click)=\"activate(item._id)\"   style=\"float: right; \"> Activate</button>\n              <button *ngIf=\" !item.blocked \" class=\"btn btn-danger\" (click)=\"deactivate(item._id)\"   style=\"float: right; \"> Deactivate</button>\n              <p >Name :  {{item.name  }}  </p>\n              <p> Email : {{item.email}}</p>\n              <p> Job : {{item.job}}</p>\n              <p> Contact : {{item.contact}}</p>\n            </div>\n        \n           \n            <!-- {{item | json}} -->\n            <hr>\n          </div>\n        </mat-card>\n        <mat-card  class=\"col-10 col-md-3 ml-5 ml-md-0  mt-5 mt-md-0 \"  style=\"height: 87vh;border-radius: 12px; \">     \n          <h3>Add users</h3> \n          <form (submit)=\"onAddSubjects(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\" style=\"font-size: smaller;\">\n            <mat-form-field   appearance=\"outline\" >\n              <mat-label>Roles</mat-label>\n              <mat-select name=\"role\" ngModel   #GendrInput=\"ngModel\"  required> \n                <mat-option     value =\"SuperUser\"  >SuperUser </mat-option> \n                <mat-option     value =\"Admin\"  > Admin</mat-option> \n                <mat-option     value =\"Analyst\"  >Analyst </mat-option> \n                <mat-option     value =\"Finance\"  > Finance</mat-option> \n  \n              </mat-select>\n              <mat-error *ngIf=\"GendrInput.invalid\">Please select a Role.</mat-error>\n\n            </mat-form-field>\n\n            <mat-form-field  appearance=\"outline\"><mat-label>Email</mat-label>\n              <input matInput name=\"email\"  maxlength=\"320\" minlength=\"6\" ngModel type=\"email\" placeholder=\"E-Mail\" #emailInput=\"ngModel\" [email]=\"true\" required email>\n              <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\n            </mat-form-field>\n\n            \n              <mat-form-field  appearance=\"outline\"><mat-label>User Name</mat-label>\n                  <input matInput name=\"user\"  maxlength=\"200\" minlength=\"4\" ngModel type=\"text\" placeholder=\"User Name\" #nameInput=\"ngModel\"  required >\n                  <mat-error *ngIf=\"nameInput.invalid\">Please enter a valid user name.</mat-error>\n                </mat-form-field> \n\n                <mat-form-field  appearance=\"outline\"><mat-label>Phone Number</mat-label>\n                  <input matInput name=\"number\" [disabled]=\"ph\"  maxlength=\"12\" minlength=\"10\" ngModel type=\"number\" placeholder=\"Phone number\" #phoneInput=\"ngModel\"  required number>\n                  <mat-error *ngIf=\"phoneInput.invalid\">Please enter a valid phone number.</mat-error>\n                </mat-form-field> \n              <br><br> \n              <button mat-raised-button  color=\"primary\"\n               type=\"submit\" style=\"color: black; background-color:rgba(3, 94, 230, 0.52) !important;\"  >Submit</button>\n\n            </form>  \n\n         </mat-card> \n    </div>\n    <br>\n\n</div>\n\n\n ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminComponent } from './admin.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { TutorsComponent } from './tutors/tutors.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { HelpcenterComponent } from './helpcenter/helpcenter.component'; \nimport { AuthGuard } from './auth.guard';\nimport { UsersdetailsComponent } from './usersdetails/usersdetails.component';\nimport { AddComponent } from './add/add.component';\nimport { HelpdetailsComponent } from './helpcenter/helpdetails/helpdetails.component';\nimport { AdduserComponent } from './adduser/adduser.component';\nimport { JobsGuard } from './jobs.guard';\nimport { StudentdetailsComponent } from './studentdetails/studentdetails.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent  },\n  { path : '' , component : AdminComponent  , \n    children : [ \n      { path : 'dashboard' , component : DashboardComponent  ,\n      data : { expectedRole : ['SuperUser', \"Finance\"]} , canActivate : [JobsGuard ]} ,\n      { path : 'tutors' , component : TutorsComponent  ,\n      data : { expectedRole : ['SuperUser']} , canActivate : [JobsGuard]},\n      { path : 'students' ,component : CustomersComponent  ,\n      data : { expectedRole : ['SuperUser']} , canActivate : [JobsGuard]},\n      { path : 'settings' , component : SettingsComponent  ,\n      data : { expectedRole : ['SuperUser']} , canActivate : [JobsGuard]},\n      { path : 'helpcenter' , component : HelpcenterComponent ,\n      data : { expectedRole : ['SuperUser']} , canActivate : [JobsGuard] } ,\n      { path : 'add' , component : AddComponent ,\n      data : { expectedRole : ['SuperUser' ,'Admin']} , canActivate : [JobsGuard]  },\n      { path : 'addusers' , component : AdduserComponent  ,\n      data : { expectedRole : ['SuperUser']} , canActivate : [JobsGuard]},\n      { path : 'student/userdetails/:id' , component : StudentdetailsComponent  ,\n      data : { expectedRole : ['SuperUser']} , canActivate : [JobsGuard]},\n      { path : 'facutlty/userdetails/:id' , component : UsersdetailsComponent  ,\n      data : { expectedRole : ['SuperUser']} , canActivate : [JobsGuard]},\n      { path : 'help/:id' , component : HelpdetailsComponent  ,\n      data : { expectedRole : ['SuperUser']} , canActivate : [JobsGuard]},\n    ] , canActivate : [AuthGuard] , data : { expectedRole : 'Admin'}  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { NgxIndexedDBService } from 'ngx-indexed-db'; \nimport { Router } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(private dbService : NgxIndexedDBService, private auth : AuthGuard,private route : Router) { \n    \n    this.getScreenSize();\n  }\n\n  name\n  isVerified \n  mode = 'side'\n  innerWidth \n  scrHeight:any;\n  scrWidth:any;\n  Toggle(){\n    if(this.scrWidth <500){\n      this.isOpened =! this.isOpened\n    }\n  }\n  @HostListener('window:resize', ['$event'])\n  getScreenSize(event?) {\n        this.scrHeight = window.innerHeight;\n        this.scrWidth = window.innerWidth;\n        console.log(this.scrHeight, this.scrWidth);\n  }\n \n  ngOnInit() {\n    this.name = this.auth.getName()\n    \n  \n    if(this.scrWidth < 500){ \n      this.mode = 'over' \n      this.isOpened = false\n    }\n    \n  }\n  logout(){\n    this.dbService.clear('token')\n    .then(a=>{ \n      this.route.navigateByUrl('auth/login')\n      console.log('logged out success full')})\n  }\n  @ViewChild('sidenav', {static: false}) sidenav: MatSidenav;\n  isExpanded =true;\n  showSubmenu: boolean = false;\n  isShowing = false;\n  showSubSubMenu: boolean = false;\n  isOpened = true\n  open(){\n    this.isOpened = !this.isOpened\n    // this.isExpanded = !this.isExpanded\n  }\n  mouseenter() {\n    if (!this.isExpanded) {\n      this.isShowing = true;\n    }\n  }\n\n  mouseleave() {\n    if (!this.isExpanded) {\n      this.isShowing = false;\n    }\n  }\n}\n\n\n\n \n\n// router.post('/faculty/block/:uid',blockFaculty);\n// router.post('/faculty/unblock/:uid',unBlockFaculty);\n\n// router.post('/student/block/:uid',blockStudent);\n// router.post('/student/unblock/:uid',unBlockStudent);","<mat-toolbar color=\"primary\" style=\"background-color: #ffffff;color: black;\" class=\"example-toolbar\">\n    <button mat-icon-button class=\"b\"   (click)=\"open()\"><mat-icon>menu</mat-icon></button>\n    <span  >\n      <a   routerLink=\"/admin/dashboard\"  >\n        <img src=\"https://firebasestorage.googleapis.com/v0/b/homemade-de936.appspot.com/o/namastegurus.png?alt=media&token=d1695749-12c1-43f9-937f-38cc931ba848\"\n         alt=\"\" style=\"width: 150px;   height: 73px; \">\n\n        <!-- <img src=\"../../assets/vHp-1.png\" alt=\"\" style=\"width: 150px; height: 8vh\"> -->\n       </a>\n    </span>\n    <span class=\"example-fill-remaining-space\"></span>\n    <button mat-button [matMenuTriggerFor]=\"menu\">\n        <span class=\"hi\"> {{name}}</span><mat-icon>keyboard_arrow_down</mat-icon> \n        <img width=\"30vw\" src=\"../../assets/303030.png\" alt=\"\"> </button>\n        <mat-menu #menu=\"matMenu\">\n          <button routerLink=\"/faculty/profile\" mat-menu-item>My Account</button> \n          <button mat-menu-item (click)=\"logout()\" >Logout</button>\n        </mat-menu>\n  </mat-toolbar>\n  <mat-sidenav-container  style=\"background-color:   #F0F0F7!important;\" autosize>\n    <mat-sidenav #sidenav class=\"example-sidenav\" [mode]=\"mode\" [opened]=\"isOpened\" \n    (mouseenter)=\"mouseenter()\" (mouseleave)=\"mouseleave()\">\n      <mat-nav-list>\n        <!-- <mat-list-item (click)=\"showSubmenu = !showSubmenu\" class=\"parent\">\n          <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">Parent Menu</span>\n          <mat-icon mat-list-icon>dashboard</mat-icon>\n          <mat-icon class=\"menu-button\"\n           [ngClass]=\"{'rotated' : showSubmenu}\" *ngIf=\"isExpanded || isShowing\">expand_more</mat-icon>\n        </mat-list-item>  -->\n        <br><br> \n        <mat-list-item  class=\"parent \" routerLink=\"/admin/dashboard\"  routerLinkActive=\"active\">\n          <span class=\"full-width mr-5\" *ngIf=\"isExpanded || isShowing\" (click)=\" Toggle() \">Dashboard</span>\n          <mat-icon mat-list-icon>dashboard</mat-icon>     \n        </mat-list-item> \n        <mat-list-item  class=\"parent \"  routerLinkActive=\"active\"  (click)=\" Toggle() \"  routerLink=\"/admin/tutors\">\n          <span class=\"full-width mr-5\" *ngIf=\"isExpanded || isShowing\"> tutors</span>\n          <mat-icon mat-list-icon>bar_chart</mat-icon>     \n        </mat-list-item>\n        <mat-list-item  class=\"parent \" routerLinkActive=\"active\" (click)=\" Toggle() \"  routerLink=\"/admin/students\">\n          <span class=\"full-width mr-5\" *ngIf=\"isExpanded || isShowing\"   >Students </span>\n          <mat-icon mat-list-icon>date_range</mat-icon>     \n        </mat-list-item>\n        <mat-list-item  class=\"parent \"  routerLinkActive=\"active\" (click)=\" Toggle() \" routerLink=\"/admin/add\">\n          <span class=\"full-width mr-5\" *ngIf=\"isExpanded || isShowing\">Management</span>\n          <mat-icon mat-list-icon>live_help</mat-icon>     \n        </mat-list-item>\n        <mat-list-item  class=\"parent \"  routerLinkActive=\"active\" (click)=\" Toggle() \" routerLink=\"/admin/addusers\">\n          <span class=\"full-width mr-5\" *ngIf=\"isExpanded || isShowing\">Add Users</span>\n          <mat-icon mat-list-icon>add</mat-icon>     \n        </mat-list-item>\n        <mat-list-item  class=\"parent \"  routerLinkActive=\"active\" (click)=\" Toggle() \" routerLink=\"/admin/helpcenter\">\n          <span class=\"full-width mr-5\" *ngIf=\"isExpanded || isShowing\">Help Center</span>\n          <mat-icon mat-list-icon>live_help</mat-icon>     \n        </mat-list-item>\n        <mat-list-item  class=\"parent \"  routerLinkActive=\"active\"  (click)=\" Toggle() \" routerLink=\"/admin/settings\">\n          <span class=\"full-width mr-5\" *ngIf=\"isExpanded || isShowing\">Settings</span>\n          <mat-icon mat-list-icon>settings</mat-icon>     \n        </mat-list-item>\n        <!-- <div class=\"submenu\" [ngClass]=\"{'expanded' : showSubmenu}\" *ngIf=\"isShowing || isExpanded\">\n          <a mat-list-item href=\"...\">Submenu Item 1</a>\n          <a mat-list-item href=\"...\">Submenu Item 2</a>\n          <mat-list-item (click)=\"showSubSubMenu = !showSubSubMenu\" class=\"parent\">\n            <span class=\"full-width\" *ngIf=\"isExpanded || isShowing\">Nested Menu</span>\n            <mat-icon class=\"menu-button\" [ngClass]=\"{'rotated' : showSubSubMenu}\" *ngIf=\"isExpanded || isShowing\">expand_more</mat-icon>\n          </mat-list-item>\n          <div class=\"submenu\" [ngClass]=\"{'expanded' : showSubSubMenu}\" *ngIf=\"isShowing || isExpanded\">\n            <mat-list-item>SubSubmenu Item 1</mat-list-item>\n            <mat-list-item>SubSubmenu Item 2</mat-list-item>\n          </div> \n        </div>-->\n      </mat-nav-list>\n      <mat-nav-list>\n    </mat-nav-list>\n    </mat-sidenav>\n    \n    <router-outlet></router-outlet>\n      \n    <div class=\" setting_wrap\"  (click)=\"open()\" > \n      <mat-icon  >list</mat-icon>\n  </div>\n    <!-- <app-footer ></app-footer>   -->\n   \n  </mat-sidenav-container>\n  ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AdminComponent } from './admin.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '../shared/modules/angular-material.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { TutorsComponent } from './tutors/tutors.component';\nimport { HelpcenterComponent } from './helpcenter/helpcenter.component';\nimport { UsersComponent } from './users/users.component';\nimport { UsersdetailsComponent } from './usersdetails/usersdetails.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { AddComponent } from './add/add.component'; \nimport { HelpdetailsComponent } from './helpcenter/helpdetails/helpdetails.component';\nimport { MomentModule } from 'ngx-moment';\nimport { AdduserComponent } from './adduser/adduser.component';\nimport { StudentdetailsComponent } from './studentdetails/studentdetails.component';\n\n\n@NgModule({\n  declarations: [AdminComponent, LoginComponent, DashboardComponent, TutorsComponent,\n     HelpcenterComponent, UsersComponent, UsersdetailsComponent, SettingsComponent, CustomersComponent, AddComponent,\n      HelpdetailsComponent,\n      AdduserComponent,\n      StudentdetailsComponent],\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,MomentModule,\n    AngularMaterialModule\n  ]\n})\nexport class AdminModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs'; \nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\n// export class AuthGuard implements CanActivate {\n//   canActivate(\n//     next: ActivatedRouteSnapshot,\n//     state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n//     return true;\n//   }\n// }\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router,  \n    private dbService: NgxIndexedDBService,public jwtHelper: JwtHelperService) { \n        \n    }\n  token \n  decodedToken   \n  expirationDate \n  isExpired      \n  expectedRole   \n  helper = new JwtHelperService();\n \n  getName(){ \n    // console.log(this.token)\n    return this.decodedToken.firstName\n  }\n  getToken(){\n    return this.token\n  }\n  getDecoded(){\n    return this.decodedToken\n  }\n  getIsVerified(){\n    return this.decodedToken.kycverified\n  }\n  async canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n     await this.dbService.getAll('token').then(\n      async (person: any) => { \n        if(person.length == 0){\n          this.router.navigate(['']);\n        }\n        this.token =   await person[0].token  \n      },\n      error => {\n          console.log(error);\n      }\n    ); \n    // console.log(this.token)\n    this.decodedToken   = this.helper.decodeToken(this.token);\n    this.expirationDate = this.helper.getTokenExpirationDate(this.token);\n    this.isExpired      = this.helper.isTokenExpired(this.token);\n    this.expectedRole   = next.data.expectedRole;\n    // console.log(expectedRole)\n    console.log(this.decodedToken)\n    // console.log(expirationDate)\n    // console.log(this.isExpired) \n    if (!this.isExpired  && this.expectedRole == this.decodedToken.role){\n      return true;\n    }  \n    this.router.navigate(['/admin/login']);\n    return false;\n  }\n}","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'; \nimport { AuthGuard } from '../auth.guard';\nimport { Router } from '@angular/router';\nexport interface UserData {\n  contact: string,\n  email: string,\n  kycverified: boolean,\n  name: string,\n  profession: string,\n  degree: string\n}\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss']\n})\nexport class CustomersComponent implements OnInit {\n\n\n  displayedColumns: string[] = [ 'name', 'id','progress', 'color' ];\n  dataSource: MatTableDataSource<UserData>;\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(private http  : HttpClient ,  private auth : AuthGuard, private router : Router) {\n   \n   let users\n    \n    // Create 100 users\n    users =  this.getUsers() \n    // Assign the data to the data source for the table to render\n   \n  } \n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  users\n  async getUsers(){ var headers_object = new HttpHeaders({ \n          'Authorization': \"Bearer \" + this.auth.getToken()\n      })\n      const httpOptions = {\n        headers: headers_object\n      }; \n    await this.http.get('https://namasteguru.herokuapp.com/api/admin/getStudents' , httpOptions)\n    .toPromise()\n    .then((a: any)=>{ console.log(a)\n      this.users =   a.data\n    }) \n    this.dataSource = new MatTableDataSource(this.users);\n    // return users\n    console.log(this.users)\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  open(i){\n    console.log(this.users[i]._id)\n    this.router.navigateByUrl('admin/student/userdetails/'+this.users[i]._id)\n  }\n}","<div style=\"min-height: 100vh;\" class=\"ml-5 mr-5\">\n    <br> <h2 class=\"page-title\">Students</h2> \n    <mat-form-field  appearance=\"outline\"  style=\"width: 10vw; \">\n      <mat-label>Search</mat-label>\n      <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\">\n    </mat-form-field> \n      <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n      \n          <!-- ID Column -->\n          <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Contact</th>\n            <td mat-cell *matCellDef=\"let row; let i = index\"  > \n              <a style=\"cursor:  pointer; \" (click)=\"open(i)\">{{row.contact}}</a> </td>\n          </ng-container>\n      \n          <!-- Progress Column -->\n          <ng-container matColumnDef=\"progress\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> KYC Status </th>\n            <td mat-cell *matCellDef=\"let row; let i = index\"   > \n              <a style=\"cursor:  pointer; \" (click)=\"open(i)\">{{(row.kycverified) ? 'verified' :' not verified '}} </a>  </td>\n            \n          </ng-container>\n      \n          <!-- Name Column -->\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let row; let i = index\"   > \n              <a style=\"cursor:  pointer; \" (click)=\"open(i)\">{{row.name}}</a> </td>\n          </ng-container>\n      \n          <!-- Color Column -->\n          <ng-container matColumnDef=\"color\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Highest Degree </th>\n            <td mat-cell *matCellDef=\"let row; let i = index\"    [style.color]=\"row.color\"> \n              <a style=\"cursor:  pointer; \" (click)=\"open(i)\">{{row.degree}}</a> </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"profession\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>profession</th>\n            <td mat-cell *matCellDef=\"let row ; let i = index\"  >\n              <a style=\"cursor:  pointer; \" (click)=\"open(i)\"> {{row.profession}}</a>  \n            </td>\n          </ng-container>  \n\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n          </tr>\n        </table>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n      \n      </div>\n      \n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"min-height: 100vh;\"  >\n    <br>\n    <div class=\"row\">\n        <mat-card class=\"col-3 m-auto\">\n            <h3>Total Tutors</h3>\n            <h1>250</h1>\n        </mat-card>\n        <mat-card class=\"col-3 m-auto\">\n            <h3>Total Students</h3><h1>250</h1>\n        </mat-card>\n        <mat-card class=\"col-3 m-auto\">\n            <h3>Total Courses</h3><h1>2 </h1>  \n        </mat-card>\n    </div>\n    <app-tutors></app-tutors>\n</div>","import { Component, OnInit } from '@angular/core';\n   \nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AuthGuard } from '../auth.guard';\nimport { ToastrService } from 'ngx-toastr';\nexport interface PeriodicElement {\n  status: string,\n  ticketId  : string,\n  _id  : string,\n}\n \n@Component({\n  selector: 'app-helpcenter',\n  templateUrl: './helpcenter.component.html',\n  styleUrls: ['./helpcenter.component.scss']\n})\nexport class HelpcenterComponent implements OnInit {\n\n  \n\n  constructor(private http : HttpClient, private auth : AuthGuard, private t : ToastrService , private router : Router) { }\n  displayedColumns: string[] = ['position'  , 'name'    ];\n  // dataSource = ELEMENT_DATA;\n  dataSource: MatTableDataSource<PeriodicElement>;\n\n  ngOnInit() {\n    \n      this.getUsers() \n  }\n  users\n  isLoading =  true\n  async getUsers(){ var headers_object = new HttpHeaders({ \n    'Authorization': \"Bearer \" + this.auth.getToken()\n    })\n    const httpOptions = {\n      headers: headers_object\n    }; \n    await this.http.get('https://namasteguru.herokuapp.com/api/admin/tickets', httpOptions)\n    .toPromise()\n    .then((a: any)=>{ \n      console.log(a)\n    this.users =   a.data\n      this.isLoading = false\n\n    }) \n    this.dataSource = new MatTableDataSource(this.users);\n    // return users\n    console.log(this.users)\n \n  }\n  queries\n  isLoading2 = true \n \n  onAdd(form:NgForm){ \n    \n    if(form.invalid){ \n      return\n    } \n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n   })\n   const httpOptions = {\n     headers: headers_object\n   };\n \n\n      console.log(form.value.des)\n      this.http.post('https://namasteguru.herokuapp.com/api/faculty/createticket',\n      {\n        'query' : form.value.style,\n        'description' : form.value.des\n      },  httpOptions)\n      .toPromise()\n      .then(a=>{ console.log(a)\n        this.t.success('added successfully' ) \n        this.getUsers()\n        form.resetForm()\n      })\n      .catch(err=> {\n        console.log(err)\n        this.t.error('failed to send' )\n      })\n \n  }\n\n}\n","<!-- <br><br>\n<h2 style=\"text-align: center;\">Help Center</h2>\n<div class=\"container\" style=\"height: 100vh;\">\n    <div class=\"row\">\n        <div class=\"col-md-8 col-12 m-auto    \">\n            <mat-card class=\"bg pl-5 l-b-5\"><br>\n                <form (submit)=\"onSigninE(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\n                    <mat-form-field   appearance=\"outline\" style=\"width: 50%;\">\n                        <mat-label>Problem</mat-label>\n                        <mat-select name=\"style\" ngModel   #GenderInput=\"ngModel\"  required>\n                          \n                          <mat-option value=\"Male\">Not Loading</mat-option>\n                          <mat-option value=\"Female\">Change Phone Number</mat-option>\n                          <mat-option value=\"Male\">Change Email</mat-option>\n                          <mat-option value=\"Female\">None of the above</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"GenderInput.invalid\">Please select a Problem.</mat-error>\n                      </mat-form-field><br>\n\n\n                   <mat-form-field  appearance=\"outline\"><mat-label>Description</mat-label>\n                        <textarea matInput name=\"des\"  maxlength=\"200\" minlength=\"4\" \n                        ngModel type=\"text\" placeholder=\"Short Description\" #hdInput=\"ngModel\"  required ></textarea>\n                        <mat-error *ngIf=\"hdInput.invalid\">Please enter a Short Description.</mat-error>\n                    </mat-form-field> \n                    <br>  \n                    <button mat-raised-button   type=\"submit\"  >Submit</button><br><br>\n                  </form>\n                  \n            </mat-card>\n        </div>\n    </div>\n</div> -->\n\n \n<div style=\"overflow-x: hidden;\">\n     \n  <br>\n     <div class=\"row\"  > \n         <mat-card class=\"col-10 col-md-8 ml-5 ml-md-0 ml-md-5 mr-2  \" style=\"min-height: 87vh;border-radius: 12px;\">\n          <h2 class=\"page-title\">Help Center</h2>  \n          <br>\n           \n          <app-loading *ngIf=\" isLoading\" ></app-loading>\n          <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource\" matSort   *ngIf=\"!isLoading\">\n          \n              <!-- ID Column -->\n              <ng-container matColumnDef=\"position\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Ticket Id</th>\n                <td mat-cell *matCellDef=\"let row;let i =index\">\n                  <a mat-icon-button [routerLink]=\"['/admin/help/'+users[i]._id]\"\n                  routerLinkActive=\"router-link-active\"  style=\"  \n                  color: rgb(94, 141, 163);\">{{row.ticketId  }}\n                  </a>\n            </td>\n              </ng-container> \n              <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Problem </th>\n                \n                <td mat-cell *matCellDef=\"let row\"> {{row.query }} </td>\n              </ng-container> \n              <!-- Progress Column -->\n              <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>  Status </th>\n                <td mat-cell *matCellDef=\"let row\"> \n                  {{ (row.status) ? 'close' : 'open' }}  \n                </td>\n                \n              </ng-container> \n    \n\n              <!-- <ng-container matColumnDef=\"update\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>   </th>\n                \n                <td mat-cell *matCellDef=\"let row ; let i = index\">\n                  <button mat-raised-button  [routerLink]=\"['/faculty/help/'+users[i]._id]\" routerLinkActive=\"router-link-active\"  style=\"background-color: rgba(70, 70, 70, 0.192) !important; color: white;\">add more details</button>\n                    \n                  </td>\n              </ng-container>  -->\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n              </tr>\n            </table>\n          </div>\n\n\n         </mat-card>\n         <mat-card  class=\"col-10 col-md-3 ml-5 ml-md-0  mt-5 mt-md-0 \"  style=\"height: 87vh;border-radius: 12px; \">     \n          <!-- <h1>Create Issues</h1> -->\n          <br><br>  \n \n          </mat-card> \n     </div>\n     <br>\n\n</div> \n\n<!-- \n<div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource\" matSort   *ngIf=\"!isLoading\">\n           \n              <ng-container matColumnDef=\"position\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Ticket Id</th>\n                <td mat-cell *matCellDef=\"let row\"> {{row.ticketId  }} </td>\n              </ng-container> \n              <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>  </th>\n                \n                <td mat-cell *matCellDef=\"let row\">  </td>\n              </ng-container>  \n              <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> KYC Status </th>\n                <td mat-cell *matCellDef=\"let row\"> \n                  {{ (row.status) ? 'close' : 'open' }}  \n                </td>\n                \n              </ng-container> \n    \n\n              <ng-container matColumnDef=\"update\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>   </th>\n                \n                <td mat-cell *matCellDef=\"let row ; let i = index\">\n                  <button mat-raised-button  [routerLink]=\"['/admin/help/'+users[i]._id]\" routerLinkActive=\"router-link-active\"  style=\"background-color: rgba(70, 70, 70, 0.192) !important; color: white;\">add more details</button>\n                    \n                  </td>\n              </ng-container> \n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n              </tr>\n            </table>\n          </div> -->","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'; \nimport { MatSnackBar } from '@angular/material/snack-bar'; \nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { AuthGuard } from '../../auth.guard';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-helpdetails',\n  templateUrl: './helpdetails.component.html',\n  styleUrls: ['./helpdetails.component.scss']\n})\nexport class HelpdetailsComponent implements OnInit {\n\n \n \n  @ViewChild('scrollMe') private myScrollContainer: ElementRef;\n  constructor(private http : HttpClient, private auth : AuthGuard,\n    private t :ToastrService  , private router :  ActivatedRoute ,\n    private route : Router ) { }\n  id\n    isLoading = true\n  ngOnInit(): void {\n    this.router.params.subscribe(d=>{\n      console.log(d.id)\n      this.id = d.id\n    this.getUsers(d.id)\n    }\n    ) \n  }users\n  async getUsers(id){ var headers_object = new HttpHeaders({ \n    'Authorization': \"Bearer \" + this.auth.getToken()\n    })\n    const httpOptions = {\n      headers: headers_object\n    }; \n    await this.http.get('https://namasteguru.herokuapp.com/api/admin/ticket/'+id, httpOptions)\n    .toPromise()\n    .then((a: any)=>{ console.log(a)\n    this.users =   a.data\n      this.isLoading = false\n\n    })  \n    // return users\n    console.log(this.users)\n  }\n  \n\n \n  isLoading3 = false\n  onAdd(form:NgForm){ \n    \n    if(form.invalid){ \n      return\n    } \n    this.isLoading3 = true\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n    })\n    const httpOptions = {\n      headers: headers_object\n    };\n \n\n\n    this.http.post('https://namasteguru.herokuapp.com/api/admin/ticket/'+this.id,\n    { \n      'description' : form.value.des\n    } ,  httpOptions)\n    .toPromise()\n    .then(a=>{ \n      this.getUsers(this.id)\n      console.log(a)\n      this.t.success('replied successfully' ) \n      form.resetForm()\n      this.isLoading3 = false\n    })\n    .catch(err=> {\n      console.log(err)\n      this.t.error('failed to update' )\n      this.isLoading3 = false\n    })\n  }\n\n  close(){\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n    })\n    const httpOptions = {\n      headers: headers_object\n    };\n  \n\n    this.http.post('https://namasteguru.herokuapp.com/api/admin/ticket/'+this.id+'/close',\n    {  \n    } ,  httpOptions)\n    .toPromise()\n    .then(a=>{ \n      this.getUsers(this.id)\n      console.log(a)\n      this.t.success('closed successfully' )  \n      // this.route.navigateByUrl('admin/helpcenter')\n    })\n    .catch(err=> {\n      console.log(err)\n      this.t.error('failed to update' )\n    })\n  }\n}\n","<div style=\"overflow-x: hidden; min-height: 92vh;\">\n     \n    <br>\n        <app-loading *ngIf=\" isLoading\" ></app-loading>\n       <div class=\"row\"  *ngIf=\"!isLoading\" > \n            \n        <mat-card    class=\"col-10 col-md-8 ml-5 ml-md-0 ml-md-5 mr-2  \" style=\"height: 87vh;border-radius: 12px;overflow-y: scroll;\">\n            <button class=\"btn btn-danger\" *ngIf=\"!users.status  \" mat-flat-button style=\"  float: right;\" (click)=\"close()\">close</button>\n            status :  {{ (users.status) ? 'closed' : 'open'}} <br>\n            <span>id : {{users.ticketId}} </span> <br>\n            created At : {{users.createdAt  | amLocale:'en' | amDateFormat:' Do MMMM YYYY, h:mm  a'}} <br>\n            \n            <br>\n            <hr>\n            <div   >\n                <div   *ngFor=\"let item of users.thread\">\n                    <br>\n    <div style=\"background-color: rgba(128, 128, 128, 0.281); padding: 1vw;  border-top-left-radius: .5vw; border-top-right-radius: .5vw; \">\n        <span style=\"float: right;\">   {{item.createdAt | amLocale:'en' | amDateFormat:' Do MMMM YYYY, h:mm  a'}}</span>\n        \n        <span  > - {{item.createdBy}}</span>\n \n    </div>\n    <div style=\"  padding: 1vw;  border-bottom-left-radius: .5vw; border-bottom-right-radius: .5vw; border: .5px solid  rgba(128, 128, 128, 0.281); \">\n        <span>  {{item.description}}</span> \n    </div>\n    \n\n    <br>\n</div> \n            </div>\n            \n        </mat-card>\n           <mat-card  class=\"col-10 col-md-3 ml-5 ml-md-0  mt-5 mt-md-0 \"  style=\"height: 87vh;border-radius: 12px; \">     \n            <h1>Reply to this  Issue</h1>\n\n            <br>\n            Ticket Id : {{users.ticketId}} \n            <br> \n<br>\n            <form *ngIf=\"!users.status else closed\"  (submit)=\"onAdd(signupForm)\"  #signupForm=\"ngForm\"  >\n \n               <mat-form-field  style=\"  width: 100% !important; \" appearance=\"outline\"><mat-label>Description</mat-label>\n                    <textarea style=\"height: 130px;   \"  matInput name=\"des\"  maxlength=\"200\" minlength=\"4\"   \n                    ngModel type=\"text\" placeholder=\"Short Description\" #hdInput=\"ngModel\"  required ></textarea>\n                    <mat-error *ngIf=\"hdInput.invalid\">Please enter a Short Description.</mat-error>\n                </mat-form-field> \n                <br>  \n                <br><br> \n\n                <button mat-raised-button  *ngIf=\"!isLoading3\"\n                  type=\"submit\" style=\"background-color: rgba(0, 0, 255, 0.603) !important; text-align: center !important ; color: white;\" >\n                  Reply<mat-icon>reply</mat-icon></button>\n\n                  <button *ngIf=\"isLoading3\"  mat-raised-button style=\"background-color: rgba(0, 0, 255, 0.603) !important; color: white;\" type=\"button\" disabled>\n                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                    Loading...\n                  </button>\n\n              </form>\n\n              <ng-template #closed>\n                  <a href=\"https://mail.google.com/mail/u/0/#inbox?compose=new\">  Contact us with email</a><br>\n                  or <br>\n                  <a   href=\"/faculty/help\"> create a new issue</a>\n                  \n              </ng-template>\n            </mat-card>\n       </div>\n       <br>\n \n</div>","import { Injectable } from '@angular/core';\nimport { CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JobsGuard implements CanActivate  {\n  constructor(private router: Router,  \n    private dbService: NgxIndexedDBService ) { \n        \n    }\n    job\n  async canActivate (\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot) {\n\n      await this.dbService.getAll('token').then(\n        async (person: any) => { \n          console.log(person)\n          this.job =   await person[0].job \n        },\n        error => {\n            console.log(error);\n        }\n      ); \n      let expectedJob = next.data.expectedRole; \n      if (  expectedJob.indexOf(this.job) >=0 ){ \n\n        return true;\n      }  \n      this.router.navigate(['/admin/login']);\n      return false;\n\n    return true;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms'; \n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  isLoading = false;\n  co; \n  hide = true;\n  error\n  bounce\n  constructor( private http: HttpClient,private dbService: NgxIndexedDBService,\n    private route: ActivatedRoute ,\n    private router: Router  \n) {}\nngOnInit() { \n}\n  onSigninE(form  : NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.http.post('https://namasteguru.herokuapp.com/api/auth/admin/login',\n    {  \"email\": form.value.email,  \n       \"password\": form.value.password \n    })\n    .subscribe((succ: any )=>{\n      console.log(succ)  \n      this.dbService.clear('token').then(\n        () =>{\n          this.dbService.add( 'token' , {\n            contact: succ.data.contact,\n            email: succ.data.email,\n            name: succ.data.firstName,\n            role: succ.data.role,\n            token: succ.data.token,\n            uid: succ.data._id ,\n            job : succ.data.job\n          })\n          .then(a=> \n            {\n            console.log('added successfully')\n            this.router.navigateByUrl('/admin/dashboard') \n            \n          }, err=> console.log(err))\n        },\n         err=>{\n          console.log(err)\n         }\n      )\n    }, err=>{\n      console.log(err.error.message)\n      this.isLoading = false\n      this.error = err.error.message\n    }\n    )\n    \n    // this.authService.login(form.value.email, form.value.password);\n  }\n\n}\n","<mat-toolbar color=\"primary\" style=\"background-color: #ffffff;color: black;\" class=\"example-toolbar\"> \n  <span  >\n    <a   routerLink=\"/admin/dashboard\"  >\n      <img src=\"https://firebasestorage.googleapis.com/v0/b/homemade-de936.appspot.com/o/namastegurus.png?alt=media&token=d1695749-12c1-43f9-937f-38cc931ba848\"\n       alt=\"\" style=\"width: 150px;   height: 73px; \">\n\n      <!-- <img src=\"../../assets/vHp-1.png\" alt=\"\" style=\"width: 150px; height: 8vh\"> -->\n     </a>\n  </span>\n  <span class=\"example-fill-remaining-space\"></span>\n \n</mat-toolbar>\n<br><br>\n<div class=\"row\">\n    <mat-card class=\"col-8 m-auto\">\n        <mat-spinner *ngIf=\"isLoading\" ></mat-spinner>\n    <form (submit)=\"onSigninE(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\" style=\"font-size: smaller;\">\n      <mat-form-field  appearance=\"outline\">\n        \n        <mat-label>Email</mat-label><span matPrefix> <mat-icon>email</mat-icon></span>\n        <input matInput name=\"email\"  maxlength=\"320\" minlength=\"6\" ngModel type=\"email\" placeholder=\"E-Mail\" #emailInput=\"ngModel\" [email]=\"true\" required email>\n        <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\n      </mat-form-field> \n      <br><br>\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Password</mat-label><span matPrefix> <mat-icon>lock</mat-icon></span>\n        <input [type]=\"hide ? 'password' : 'text'\"  maxlength=\"16\" minlength=\"1\" name=\"password\" ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\" required>\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon> \n        </button>\n        <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\n      </mat-form-field><br>\n      <mat-error *ngIf=\"error\">{{error}}</mat-error>\n    \n      <a   routerLink=\"/auth/forgot\" style=\"text-decoration: none; color: black;\" routerLinkActive=\"active\" (click)=\"openDialog()\">Forgot Password</a><br>\n      <br>\n      <button mat-raised-button  color=\"primary\" type=\"submit\" style=\"color: black; background-color:rgba(3, 94, 230, 0.52) !important;\"  >Login</button>\n    </form>\n    \n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n  details\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"overflow-x: hidden;\">\n     \n    <br>\n       <div class=\"row\"  > \n           <mat-card class=\"col-10 col-md-8 ml-5 ml-md-5 mr-2  \" style=\"height: 87vh;border-radius: 12px;\">\n               <h2 class=\"page-title\">Settings</h2>\n               <p>Comming Soon</p>\n           </mat-card>\n           <mat-card  class=\"col-10 col-md-3 mt-5 mt-md-0 \"  style=\"height: 87vh;border-radius: 12px;\">     \n                <div class=\"row\">\n                    <img class=\"col-6 ml-auto mr-auto\" src=\"../../../assets/teacher.PNG\"  style=\"border-radius: 50%;  \" alt=\"\">\n\n                </div>       \n                <!-- <h2 style=\"text-align: center;\">{{details.name}}</h2>\n                <h2 style=\"text-align: center;\">{{details.email}}</h2>\n                <h2 style=\"text-align: center;\">{{details.contact}} </h2> -->\n            </mat-card> \n       </div>\n       <br>\n \n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'; \nimport { AuthGuard } from '../auth.guard';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-studentdetails',\n  templateUrl: './studentdetails.component.html',\n  styleUrls: ['./studentdetails.component.scss']\n})\nexport class StudentdetailsComponent implements OnInit {\n\n \n  constructor(private http : HttpClient,private auth : AuthGuard , private router :  ActivatedRoute,  private route : Router) { }\nuser\nisLoading = true \nweekend = []\nweekday = []\nedit = true\nid\nurl\nu\n  ngOnInit(): void {\n    this.url = this.route.url.slice(7,14)\n    console.log(this.url)\n    if(this.url == 'student'){\n      this.u = 'Student'\n    }else{\n      this.u= 'Faculty'\n    }\n    this.router.params.subscribe(d=>{\n      console.log(d.id)\n      this.getData(d.id)\n      this.id = d.id\n    })\n     \n   \n  }\n  getData(id){\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n  })\n  const httpOptions = {\n    headers: headers_object\n  }; \n  console.log(this.u)\n  this.http.get('https://namasteguru.herokuapp.com/api/admin/get'+this.u+'/'+id , httpOptions)\n.toPromise()\n.then((a: any)=>{ console.log(a)\n  this.user = a.data[0]\n \n  console.log(this.user)\n  this.isLoading = false\n}) \n  }\n  accept(){\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n  })\n  const httpOptions = {\n    headers: headers_object\n  }; \n  console.log(this.auth.getToken())\n  this.http.post('https://namasteguru.herokuapp.com/api/admin/'+this.url+'/user-verification/'+this.user._id ,{},  httpOptions)\n  .toPromise()\n  .then((a: any)=>{ console.log(a)\n    this.getData(this.id)\n  }) \n  .catch(e=> console.log(e))\n  \n  }\n  reject(){\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n    })\n    const httpOptions = {\n      headers: headers_object\n    };  \n    this.http.post('https://namasteguru.herokuapp.com/api/admin/'+this.url+'/user-re-verification/'+this.user._id ,{},  httpOptions)\n    .toPromise()\n    .then((a: any)=>{ console.log(a)\n      this.getData(this.id)\n    }) \n    .catch(e=> console.log(e))\n    \n  }\n\n  activate(){\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n  })\n  const httpOptions = {\n    headers: headers_object\n  }; \n  console.log(this.auth.getToken())\n  this.http.post('https://namasteguru.herokuapp.com/api/admin/'+this.url+'/unblock/'+this.user._id ,{},  httpOptions)\n  .toPromise()\n  .then((a: any)=>{ console.log(a)\n    this.getData(this.id)\n  }) \n  .catch(e=> console.log(e))\n  \n  }\n  deactivate(){\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n    })\n    const httpOptions = {\n      headers: headers_object\n    };  \n    this.http.post('https://namasteguru.herokuapp.com/api/admin/'+this.url+'/block/'+this.user._id ,{},  httpOptions)\n    .toPromise()\n    .then((a: any)=>{ console.log(a)\n      this.getData(this.id)\n    }) \n    .catch(e=> console.log(e))\n    \n  }\n  delete(type,t , value){\n    console.log(type)\n    var headers_object = new HttpHeaders({ \n      'Authorization': \"Bearer \" + this.auth.getToken()\n    })\n    const httpOptions = {\n      headers: headers_object\n    };  \n    let data = {}\n    data['type'] = type\n    data[''+t ] = value\n    // let formData = new FormData()\n    // formData.append('type', type)\n    // formData.append(''+type, value)\n    this.http.post('https://namasteguru.herokuapp.com/api/admin/'+this.url+'/deleteslot/'+this.user._id , data,  httpOptions)\n    .toPromise()\n    .then((a: any)=>{ console.log(a)\n      this.getData(this.id)\n    }) \n    .catch(e=> console.log(e))\n    \n  }\n\n}\n","<div class=\"row\">\n    <mat-card  class=\"col-11   m-5      \"  style=\"min-height: 90vh;border-radius: 12px; \" *ngIf=\"!isLoading\">     \n        <h1>User Details</h1>\n        <div *ngIf=\" !user.kycverified ;else verified\">\n            <button class=\"btn btn-danger\" (click)=\"reject()\"   style=\"float: right; \"> Reject</button>\n            <button   class=\"btn  btn-success\" (click)=\"accept()\"   style=\"float: right; \"> Approve</button>\n            \n        </div>\n        <ng-template  #verified>\n          <button *ngIf=\" user.blocked \"  class=\"btn  btn-success\" (click)=\"activate()\"   style=\"float: right; \"> Activate</button>\n          <button *ngIf=\" !user.blocked \" class=\"btn btn-danger\" (click)=\"deactivate()\"   style=\"float: right; \"> Deactivate</button>\n\n        </ng-template>\n        <br><br> \n        <img [src]=\"user.display_pic\" height=\"100px\" style=\"border-radius: 50%;\" width=\"100px\" alt=\"display_pic\">\n        <p>{{user.name}}</p>\n        <p>{{user.email}}</p>\n        \n        <mat-tab-group mat-stretch-tabs class=\"example-stretched-tabs  \">\n          <mat-tab label=\"Personal Details\">\n            <button class=\"  m-2 \" mat-icon-button (click)=\" edit=!edit\"   style=\"float: right; \"> <mat-icon>edit</mat-icon></button>\n            <!-- <div >\n                <p>{{user.name}}</p>\n                <p>{{user.email}}</p>\n                <p>current address: {{user.current_address}} </p>\n                <p>contact:  {{user.contact}}</p>\n                <p>Short Description:  {{user.short_profile_description}}</p>\n                <p>gender:  {{user.gender}}</p>\n          \n            </div > -->\n            <div class=\"row p-0\" >\n                <div class=\"col-10 p-0 col-md-8 m-auto \"  >\n                    <br><br>\n                <mat-form-field  appearance=\"outline\">\n                    <mat-label>User Name</mat-label>\n                    <input matInput name=\"name\" maxlength=\"200\" minlength=\"4\"  [(ngModel)]=\"user.name\" [disabled]=\" edit\" \n                     type=\"text\" placeholder=\"User Name\"    #nameInput=\"ngModel\" >\n                    <mat-error  *ngIf=\"nameInput.invalid\">Please enter a valid user name.</mat-error>\n                  </mat-form-field>\n                  <mat-form-field  appearance=\"outline\"><mat-label>Email</mat-label>\n                    <input matInput name=\"email\"  maxlength=\"320\" minlength=\"6\"   [(ngModel)]=\"user.email\"[disabled]=\" edit\" \n                    type=\"email\" placeholder=\"E-Mail\"  [email]=\"true\" #emailInput=\"ngModel\" email>\n                    <mat-error *ngIf=\"emailInput.invalid\" >Please enter a valid email.</mat-error>\n                  </mat-form-field> \n                  <mat-form-field  appearance=\"outline\"><mat-label>Phone Number</mat-label>\n                    <input matInput    maxlength=\"12\" name=\"phone\"  [(ngModel)]=\"user.contact\" [disabled]=\" edit\" \n                     minlength=\"10\"   type=\"number\" placeholder=\"Phone number\"   #numberInput=\"ngModel\" number>\n                    <mat-error  *ngIf=\"numberInput.invalid\">Please enter a valid phone number.</mat-error>\n                  </mat-form-field> \n      \n       \n                  <mat-form-field  appearance=\"outline\"><mat-label>Description</mat-label>\n                    <textarea matInput name=\"description\"   maxlength=\"200\" minlength=\"4\" [disabled]=\" edit\"  [(ngModel)]=\"user.short_profile_description\"\n                      type=\"text\" placeholder=\"Short Description\"  #dInput=\"ngModel\" ></textarea>\n                    <mat-error  *ngIf=\"dInput.invalid\">Please enter a Short Description.</mat-error>\n                  </mat-form-field>  \n                  <mat-form-field  appearance=\"outline\"><mat-label>Address</mat-label>\n                    <textarea matInput name=\"address\" ngModel  maxlength=\"200\" minlength=\"4\" [disabled]=\" edit\"   [(ngModel)]=\"user.current_address\"\n                      type=\"text\" placeholder=\"Address\" #addInput=\"ngModel\" ></textarea>\n                    <mat-error  *ngIf=\"addInput.invalid\">Please enter Address.</mat-error>\n                  </mat-form-field> \n                  <mat-form-field   appearance=\"outline\" style=\"width: 50%;\">\n                    <mat-label>Gender</mat-label>\n                    <mat-select name=\"gender\"  [(ngModel)]=\"user.gender\"   #GenderInput=\"ngModel\" [disabled]=\" edit\"  required>\n                      \n                      <mat-option value=\"Male\">Male</mat-option>\n                      <mat-option value=\"Female\">Female</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"GenderInput.invalid\">Please select a Gender.</mat-error>\n                  </mat-form-field><br>\n            </div>\n        </div>\n \n          </mat-tab>\n\n \n \n          <mat-tab label=\"   Courses \"> \n            \n          </mat-tab>\n\n          <mat-tab label=\"KYC Documents \"> \n            kyc <br>\n            <img [src]=\"user.kyc.aadhar_card_image\" height=\"500px\" width=\"500px\" alt=\"\">\n            <img [src]=\"user.kyc.id_card_image\" height=\"500px\" width=\"500px\" alt=\"\"><br>\n \n          </mat-tab>\n\n\n\n\n        </mat-tab-group>\n \n    </mat-card> \n</div>","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'; \nimport { AuthGuard } from '../auth.guard';\nimport { Router } from '@angular/router';\nexport interface UserData {\n  contact: string,\n  email: string,\n  kycverified: boolean,\n  name: string,\n  profession: string,\n  degree: string\n}\n\n \n@Component({\n  selector: 'app-tutors',\n  templateUrl: './tutors.component.html',\n  styleUrls: ['./tutors.component.scss']\n})\nexport class TutorsComponent implements OnInit {\n\n  displayedColumns: string[] = [ 'name', 'id','progress', 'color', 'profession'];\n  dataSource: MatTableDataSource<UserData>;\n\n  // @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  // @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  constructor(private http  : HttpClient ,  private auth : AuthGuard, private router : Router) {\n   \n   let users\n    \n    // Create 100 users\n    users =  this.getUsers() \n    // Assign the data to the data source for the table to render\n   \n  } \n  users\n  ngOnInit() {\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n  }\n\n  \n  async getUsers(){ var headers_object = new HttpHeaders({ \n          'Authorization': \"Bearer \" + this.auth.getToken()\n      })\n      const httpOptions = {\n        headers: headers_object\n      };\n    let users\n    await this.http.get('https://namasteguru.herokuapp.com/api/admin/getFaculty' , httpOptions)\n    .toPromise()\n    .then((a: any)=>{ console.log(a)\n      this.users =   a.data\n\n\n    }) \n    this.dataSource = new MatTableDataSource(this.users);\n    // return users\n    console.log(users)\n  }\n\n  open(i){\n    console.log(this.users[i]._id)\n    this.router.navigateByUrl('admin/facutlty/userdetails/'+this.users[i]._id)\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n\n/** Builds and returns a new User. */\n// function createNewUser(id: number): UserData {\n//   const name = NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n//       NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n//   return {\n//     id: id.toString(),\n//     name: name,\n//     progress: Math.round(Math.random() * 100).toString(),\n//     color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n//   };\n// }","<div style=\"min-height: 100vh;\" class=\"ml-5 mr-5\">\n    <br>\n  <h2 class=\"page-title\">Tutors</h2> \n  <mat-form-field  appearance=\"outline\"  style=\"width: 10vw;\">\n        <mat-label>Search</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\">\n      </mat-form-field> \n      <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\" matSort>\n      \n          <!-- ID Column -->\n          <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Contact</th>\n            <td mat-cell *matCellDef=\"let row; let i = index\"  > \n              <a style=\"cursor:  pointer; \" (click)=\"open(i)\">{{row.contact}}</a> </td>\n          </ng-container>\n      \n          <!-- Progress Column -->\n          <ng-container matColumnDef=\"progress\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> KYC Status </th>\n            <td mat-cell *matCellDef=\"let row; let i = index\"   > \n              <a style=\"cursor:  pointer; \" (click)=\"open(i)\">{{(row.kycverified) ? 'verified' :' not verified '}} </a>  </td>\n            \n          </ng-container>\n      \n          <!-- Name Column -->\n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n            <td mat-cell *matCellDef=\"let row; let i = index\"   > \n              <a style=\"cursor:  pointer; \" (click)=\"open(i)\">{{row.name}}</a> </td>\n          </ng-container>\n      \n          <!-- Color Column -->\n          <ng-container matColumnDef=\"color\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Highest Degree </th>\n            <td mat-cell *matCellDef=\"let row; let i = index\"    [style.color]=\"row.color\"> \n              <a style=\"cursor:  pointer; \" (click)=\"open(i)\">{{row.degree}}</a> </td>\n          </ng-container>\n\n\n          <ng-container matColumnDef=\"profession\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>profession</th>\n            <td mat-cell *matCellDef=\"let row ; let i = index\"  >\n              <a style=\"cursor:  pointer; \" (click)=\"open(i)\"> {{row.profession}}</a>  \n            </td>\n          </ng-container>  \n\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n          </tr>\n        </table>\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n      \n      </div>\n      \n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>users works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'; \r\nimport { AuthGuard } from '../auth.guard';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n@Component({\r\n  selector: 'app-usersdetails',\r\n  templateUrl: './usersdetails.component.html',\r\n  styleUrls: ['./usersdetails.component.scss']\r\n})\r\nexport class UsersdetailsComponent implements OnInit {\r\n\r\n  constructor(private http : HttpClient,private auth : AuthGuard , private router :  ActivatedRoute) { }\r\nuser\r\nid\r\nisLoading = true\r\nedit = true\r\n  ngOnInit(): void {\r\n    this.router.params.subscribe(d=>{\r\n      this.id = d.id\r\n         this.getData(d.id) \r\n    })\r\n  }\r\n  getData(id){\r\n     \r\n      var headers_object = new HttpHeaders({ \r\n        'Authorization': \"Bearer \" + this.auth.getToken()\r\n    })\r\n    const httpOptions = {\r\n      headers: headers_object\r\n    }; \r\n    this.http.get('https://namasteguru.herokuapp.com/api/admin/getFaculty/'+id , httpOptions)\r\n  .toPromise()\r\n  .then((a: any)=>{ console.log(a)\r\n    this.user = a.data[0]\r\n    console.log(this.user)\r\n    this.isLoading = false\r\n  }) \r\n    \r\n    \r\n  }\r\n\r\n  \r\n\r\n  accept(){\r\n    var headers_object = new HttpHeaders({ \r\n      'Authorization': \"Bearer \" + this.auth.getToken()\r\n  })\r\n  const httpOptions = {\r\n    headers: headers_object\r\n  }; \r\n  console.log(this.auth.getToken())\r\n  this.http.post('https://namasteguru.herokuapp.com/api/admin/faculty/user-verification/'+this.user._id ,{},  httpOptions)\r\n  .toPromise()\r\n  .then((a: any)=>{ console.log(a)\r\n  \r\n  }) \r\n  .catch(e=> console.log(e))\r\n  \r\n  }\r\n  reject(){\r\n    var headers_object = new HttpHeaders({ \r\n      'Authorization': \"Bearer \" + this.auth.getToken()\r\n    })\r\n    const httpOptions = {\r\n      headers: headers_object\r\n    }; \r\n    console.log(this.auth.getToken())\r\n    this.http.post('https://namasteguru.herokuapp.com/api/admin/user-re-verication/'+this.user._id ,{},  httpOptions)\r\n    .toPromise()\r\n    .then((a: any)=>{ console.log(a)\r\n    \r\n    }) \r\n    .catch(e=> console.log(e))\r\n    \r\n  }\r\n\r\n  \r\n  activate(){\r\n    var headers_object = new HttpHeaders({ \r\n      'Authorization': \"Bearer \" + this.auth.getToken()\r\n  })\r\n  const httpOptions = {\r\n    headers: headers_object\r\n  }; \r\n  console.log(this.auth.getToken())\r\n  this.http.post('https://namasteguru.herokuapp.com/api/admin/faculty/unblock/'+this.user._id ,{},  httpOptions)\r\n  .toPromise()\r\n  .then((a: any)=>{ console.log(a)\r\n    this.getData(this.id)\r\n  }) \r\n  .catch(e=> console.log(e))\r\n  \r\n  }\r\n  deactivate(){\r\n    var headers_object = new HttpHeaders({ \r\n      'Authorization': \"Bearer \" + this.auth.getToken()\r\n    })\r\n    const httpOptions = {\r\n      headers: headers_object\r\n    };  \r\n    this.http.post('https://namasteguru.herokuapp.com/api/admin/faculty/block/'+this.user._id ,{},  httpOptions)\r\n    .toPromise()\r\n    .then((a: any)=>{ console.log(a)\r\n      this.getData(this.id)\r\n    }) \r\n    .catch(e=> console.log(e))\r\n    \r\n  }\r\n  delete(type,t , value){\r\n    console.log(type)\r\n    var headers_object = new HttpHeaders({ \r\n      'Authorization': \"Bearer \" + this.auth.getToken()\r\n    })\r\n    const httpOptions = {\r\n      headers: headers_object\r\n    };  \r\n    let data = {}\r\n    data['type'] = type\r\n    data[''+t ] = value\r\n    // let formData = new FormData()\r\n    // formData.append('type', type)\r\n    // formData.append(''+type, value)\r\n    this.http.post('https://namasteguru.herokuapp.com/api/admin/faculty/deleteslot/'+this.user._id , data,  httpOptions)\r\n    .toPromise()\r\n    .then((a: any)=>{ console.log(a)\r\n      this.getData(this.id)\r\n    }) \r\n    .catch(e=> console.log(e))\r\n    \r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"row\">\n    <mat-card  class=\"col-11   m-5      \"  style=\"min-height: 90vh;border-radius: 12px; \" *ngIf=\"!isLoading\">     \n        <h1>User Details</h1>\n        <div *ngIf=\"! user.kycverified ;else verified\">\n            <button class=\"btn btn-danger\" (click)=\"reject()\"   style=\"float: right; \"> Reject</button>\n            <button *ngIf=\" user.rekyc \"  class=\"btn  btn-success\" (click)=\"accept()\"   style=\"float: right; \"> Approve</button>\n            \n        </div>\n        <ng-template  #verified>\n          <button *ngIf=\" user.blocked \"  class=\"btn  btn-success\" (click)=\"activate()\"   style=\"float: right; \"> Activate</button>\n          <button *ngIf=\" !user.blocked \" class=\"btn btn-danger\" (click)=\"deactivate()\"   style=\"float: right; \"> Deactivate</button>\n\n        </ng-template>\n        <br><br> \n        <img [src]=\"user.display_pic\" height=\"100px\" style=\"border-radius: 50%;\" width=\"100px\" alt=\"display_pic\">\n        <p>{{user.name}}</p>\n        <p>{{user.email}}</p>\n        \n        <mat-tab-group mat-stretch-tabs class=\"example-stretched-tabs  \">\n          <mat-tab label=\"Personal Details\">\n            <button class=\"  m-2 \" mat-icon-button (click)=\" edit=!edit\"   style=\"float: right; \"> <mat-icon>edit</mat-icon></button>\n            <!-- <div >\n                <p>{{user.name}}</p>\n                <p>{{user.email}}</p>\n                <p>current address: {{user.current_address}} </p>\n                <p>contact:  {{user.contact}}</p>\n                <p>Short Description:  {{user.short_profile_description}}</p>\n                <p>gender:  {{user.gender}}</p>\n          \n            </div > -->\n            <div class=\"row p-0\" >\n                <div class=\"col-10 p-0 col-md-8 m-auto \"  >\n                    <br><br>\n                <mat-form-field  appearance=\"outline\">\n                    <mat-label>User Name</mat-label>\n                    <input matInput name=\"name\" maxlength=\"200\" minlength=\"4\"  [(ngModel)]=\"user.name\" [disabled]=\" edit\" \n                     type=\"text\" placeholder=\"User Name\"    #nameInput=\"ngModel\" >\n                    <mat-error  *ngIf=\"nameInput.invalid\">Please enter a valid user name.</mat-error>\n                  </mat-form-field>\n                  <mat-form-field  appearance=\"outline\"><mat-label>Email</mat-label>\n                    <input matInput name=\"email\"  maxlength=\"320\" minlength=\"6\"   [(ngModel)]=\"user.email\"[disabled]=\" edit\" \n                    type=\"email\" placeholder=\"E-Mail\"  [email]=\"true\" #emailInput=\"ngModel\" email>\n                    <mat-error *ngIf=\"emailInput.invalid\" >Please enter a valid email.</mat-error>\n                  </mat-form-field> \n                  <mat-form-field  appearance=\"outline\"><mat-label>Phone Number</mat-label>\n                    <input matInput    maxlength=\"12\" name=\"phone\"  [(ngModel)]=\"user.contact\" [disabled]=\" edit\" \n                     minlength=\"10\"   type=\"number\" placeholder=\"Phone number\"   #numberInput=\"ngModel\" number>\n                    <mat-error  *ngIf=\"numberInput.invalid\">Please enter a valid phone number.</mat-error>\n                  </mat-form-field> \n      \n       \n                  <mat-form-field  appearance=\"outline\"><mat-label>Description</mat-label>\n                    <textarea matInput name=\"description\"   maxlength=\"200\" minlength=\"4\" [disabled]=\" edit\"  [(ngModel)]=\"user.short_profile_description\"\n                      type=\"text\" placeholder=\"Short Description\"  #dInput=\"ngModel\" ></textarea>\n                    <mat-error  *ngIf=\"dInput.invalid\">Please enter a Short Description.</mat-error>\n                  </mat-form-field>  \n                  <mat-form-field  appearance=\"outline\"><mat-label>Address</mat-label>\n                    <textarea matInput name=\"address\" ngModel  maxlength=\"200\" minlength=\"4\" [disabled]=\" edit\"   [(ngModel)]=\"user.current_address\"\n                      type=\"text\" placeholder=\"Address\" #addInput=\"ngModel\" ></textarea>\n                    <mat-error  *ngIf=\"addInput.invalid\">Please enter Address.</mat-error>\n                  </mat-form-field> \n                  <mat-form-field   appearance=\"outline\" style=\"width: 50%;\">\n                    <mat-label>Gender</mat-label>\n                    <mat-select name=\"gender\"  [(ngModel)]=\"user.gender\"   #GenderInput=\"ngModel\" [disabled]=\" edit\"  required>\n                      \n                      <mat-option value=\"Male\">Male</mat-option>\n                      <mat-option value=\"Female\">Female</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"GenderInput.invalid\">Please select a Gender.</mat-error>\n                  </mat-form-field><br>\n            </div>\n        </div>\n \n          </mat-tab>\n\n\n          <mat-tab label=\"Proffessional Details\"> \n            <button class=\"  m-2 \" mat-icon-button (click)=\" edit=!edit\"   style=\"float: right; \"> <mat-icon>edit</mat-icon></button>\n            <p>degree:  {{user.degree}}</p>\n            <p>profession:  {{user.profession}}</p> \n\n            <mat-form-field   appearance=\"outline\">\n                <mat-label>Degree</mat-label>\n                <mat-select name=\"degree\"   #dInput=\"ngModel\"  [disabled]=\" edit\"     [(ngModel)]=\"user.degree\">\n                  \n                  <mat-option value=\"DSC\">DSC</mat-option>\n                  <mat-option value=\"PET\">PET</mat-option>\n                  <mat-option value=\"BED\">BED</mat-option>\n                  <mat-option value=\"BTECH\">BTECH</mat-option>\n                  <mat-option value=\"MTECH\">MTECH</mat-option>\n                  <mat-option value=\"MSC\">MSC</mat-option> \n                </mat-select>\n                <mat-error   *ngIf=\"dInput.invalid\">Please enter a valid Degree.</mat-error>\n              </mat-form-field>\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Profession</mat-label>\n                <input matInput name=\"profession\" placeholder=\"profession\" [disabled]=\" edit\" \n                #pInput=\"ngModel\"      [(ngModel)]=\"user.profession\">\n                       <mat-error   *ngIf=\"pInput.invalid\">Please enter Profession.</mat-error>\n              </mat-form-field>\n\n          </mat-tab>\n\n          <mat-tab label=\"   Enrollment \"> \n            <button class=\"  m-2 \" mat-icon-button (click)=\" edit=!edit\"   style=\"float: right; \"> <mat-icon>edit</mat-icon></button>\n            <br><br>\n            <form  (submit)=\"onAdd(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\" style=\"overflow-x: hidden;\">\n                <div class=\"row p-0\" >\n                  <div class=\"col-10 p-0 col-md-8 m-auto \"  >\n                     \n \n                     <mat-form-field *ngIf=\"!isLoading2\" >\n                       <mat-label>Duration</mat-label>\n                       <mat-select [name]=\"'duration'\" [(ngModel)]=\"user.duration\"  [disabled]=\" edit\" \n                          #durationInput=\"ngModel\"   >\n                         <mat-option value=\"Weekly\">Weekly</mat-option>\n                         <mat-option value=\"15Days\">15Days</mat-option>\n                         <mat-option value=\"Monthly\">Monthly</mat-option>\n                         <mat-option value=\"3Months\">3Months</mat-option>\n                         <mat-option value=\"6Months\">6Months</mat-option>\n                       </mat-select>\n                       <mat-error *ngIf=\"durationInput.invalid\">Please select a Duration.</mat-error>\n                     </mat-form-field><br>\n                     \n                     <!-- <mat-form-field  >\n                       <mat-label>Standard</mat-label>\n                       <mat-select [name]=\"'standard'\"  [(ngModel)]=\"user.standard\" [disabled]=\" edit\"   multiple  #standardInput=\"ngModel\"   >\n                         \n                         <mat-option (click)=\"state= !state\" ng-selected=\"true\" value=\"STATE\">State</mat-option>\n                         <mat-option value=\"ICSE\" selected  >Icse</mat-option>\n                         <mat-option value=\"CBSE\">Cbse</mat-option>\n                       </mat-select>\n                       <mat-error *ngIf=\"standardInput.invalid\">Please select a Standard.</mat-error>\n                     </mat-form-field><br> -->\n                     Standard\n                     <div *ngFor=\"let item of user.standard\">\n                        <span>{{item}} </span>\n                        <a mat-icon-button (click)=\"delete('Standard','standard',item)\"><mat-icon> delete</mat-icon></a>\n                     </div><br>\n                     Medium\n                     <div *ngFor=\"let item of user.medium\">\n                        <span>{{item}} </span>\n                        <a mat-icon-button (click)=\"delete('Medium','medium',item)\"><mat-icon> delete</mat-icon></a>\n                     </div><br>\n                    <!-- <mat-form-field  >\n                      <mat-label>Medium</mat-label>\n                      <mat-select [name]=\"'medium' \"    [(ngModel)]=\"user.medium\"   [disabled]=\" edit\"   #mediumInput=\"ngModel\" multiple    > \n                        <mat-option value=\"English\"   >English</mat-option>\n                        <mat-option value=\"Hindi\"  *ngIf=\" state \"  >Hindi</mat-option> \n                        <mat-option value=\"Telugu\"  *ngIf=\"state \"  >Telugu</mat-option>\n                        \n                      </mat-select>\n                      <mat-error *ngIf=\"mediumInput.invalid\">Please select a Medium.</mat-error>\n                    </mat-form-field><br> -->\n                    \n                   \n                     \n                    Weekdays\n                    <div *ngFor=\"let item of user.weekday\">\n                       <span>{{item.slot}} </span>\n                       <a mat-icon-button (click)=\"delete('Weekday','weekday',item.slot)\"><mat-icon> delete</mat-icon></a>\n                    </div><br>\n                     <!-- <mat-form-field  >\n                       <mat-label>Weekdays</mat-label>\n                       <mat-select [name]=\"'weekdays' \"  [(ngModel)]=\" weekday\" [disabled]=\" edit\" #weekInput=\"ngModel\" multiple   > \n                        <div  *ngFor=\"let time of   weekday ;let idx = index\">\n                          <mat-option [value]=\"time \"    \n                            >    {{time }}</mat-option>  \n      \n                         </div> \n                       </mat-select>\n                       <mat-error *ngIf=\"weekInput.invalid\">Please select a weekdays.</mat-error>\n                     </mat-form-field><br>  -->\n\n                     Weekends\n                     <div *ngFor=\"let item of user.weekend\">\n                        <span>{{item.slot}} </span>\n                        <a mat-icon-button (click)=\"delete('Weekend','weekend',item.slot)\"><mat-icon> delete</mat-icon></a>\n                     </div><br>\n                     <!-- <mat-form-field  >\n                       <mat-label>Weekends</mat-label>\n                       <mat-select [name]=\"'weekends' \"  [(ngModel)]=\" weekend\" [disabled]=\" edit\"    #endInput=\"ngModel\" multiple   > \n                        <div  *ngFor=\"let time of  weekend ;let idx = index\">\n                          <mat-option [value]=\"time \"  >   {{time  }}</mat-option>  \n       \n                         </div> \n                       </mat-select>\n                       <mat-error *ngIf=\"endInput.invalid\">Please select a week ends.</mat-error>\n                     </mat-form-field><br>  -->\n\n                     <div  *ngFor=\"let c of user.teaches;let i = index\" style=\"margin-top: 2px; border: .5px solid rgba(88, 88, 88, 0.432); padding: 10px ; border-radius: 5px;\">\n                      <mat-form-field  >\n                        <mat-label>Classes</mat-label> \n                            <input matInput [name]=\"'classes'+i \"  maxlength=\"200\" minlength=\"4\"  [(ngModel)]=\"c.class\" [disabled]=\" edit\" \n                             type=\"text\" placeholder=\"User Name\"    #clInput=\"ngModel\" >\n                            <mat-error  *ngIf=\"clInput.invalid\">Please enter a valid user name.</mat-error>\n \n                        \n                      </mat-form-field><br> \n\n                      <mat-form-field  >\n                        <mat-label>Subjects</mat-label>\n                        <mat-select [name]=\"'subjects'+i \"  [(ngModel)]=\"c.subjects\" [disabled]=\" edit\"   multiple   #subjectInput=\"ngModel\"    >\n                         <mat-option *ngFor=\"let subject of c.subjects\" [value]=\"subject\">{{subject}}    </mat-option> \n                        </mat-select>\n                        <mat-error *ngIf=\"subjectInput.invalid\">Please select a Subject.</mat-error>\n                      </mat-form-field><br>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"  m-auto\">\n                        <a style=\"cursor: pointer; margin-left: auto !important; margin-right: auto !important;\" (click)=\"count.push( {subject : 0 })\" mat-icon-button >\n                          <mat-icon>add_box</mat-icon>\n                        </a>\n                      </div>\n                    </div>\n                     \n                 <br>\n               </div>     \n                </div> \n             <br>\n                  <mat-error *ngIf=\"r\"> {{r}}</mat-error>\n                    <div class=\"row\">\n                        <button class=\"m-auto\" mat-raised-button  *ngIf=\"!isLoading3\"\n                        type=\"submit\" style=\"background-color: rgba(0, 0, 255, 0.603) !important; text-align: center !important ; color: white;\" >\n                        Submit</button>\n      \n                        <button class=\"m-auto\" *ngIf=\"isLoading3\"  mat-raised-button style=\"background-color: rgba(0, 0, 255, 0.603) !important; color: white;\" type=\"button\" disabled>\n                          <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                          Loading...\n                        </button>\n  \n                    </div>\n                      \n                </form>\n          </mat-tab>\n          <mat-tab label=\"   Courses \"> \n            \n          </mat-tab>\n\n          <mat-tab label=\"KYC Documents \"> \n            kyc <br>\n            <img [src]=\"user.kyc.aadhar_card_image\" height=\"500px\" width=\"500px\" alt=\"\">\n            <img [src]=\"user.kyc.id_card_image\" height=\"500px\" width=\"500px\" alt=\"\"><br>\n            <div class=\"video\">\n                <video controls  width=\"320\" style=\"border-radius: 5px;\" #videoPlayer>\n                    <source [src]=\"user.demo_video\" type=\"video/mp4\" />\n                    Browser not supported\n                </video>\n            </div><br>\n          </mat-tab>\n\n\n\n\n        </mat-tab-group>\n \n    </mat-card> \n</div>"],"sourceRoot":"webpack:///"}