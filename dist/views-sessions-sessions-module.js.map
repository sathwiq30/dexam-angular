{"version":3,"sources":["./src/app/views/sessions/forgot/forgot.component.ts","./src/app/views/sessions/forgot/forgot.component.html","./src/app/views/sessions/loginstudent/loginstudent.component.ts","./src/app/views/sessions/loginstudent/loginstudent.component.html","./src/app/views/sessions/sessions-routing.module.ts","./src/app/views/sessions/sessions.module.ts","./src/app/views/sessions/signin/signin.component.ts","./src/app/views/sessions/signin/signin.component.html","./src/app/views/sessions/signup/signup.component.ts","./src/app/views/sessions/signup/signup.component.html","./src/app/views/sessions/signupstudents/signupstudents.component.ts","./src/app/views/sessions/signupstudents/signupstudents.component.html"],"names":[],"mappings":"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","file":"views-sessions-sessions-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { SharedAnimations } from 'src/app/shared/animations/shared-animations';\r\n\r\n@Component({\r\n  selector: 'app-forgot',\r\n  templateUrl: './forgot.component.html',\r\n  styleUrls: ['./forgot.component.scss'],\r\n  animations: [SharedAnimations]\r\n})\r\nexport class ForgotComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"card o-hidden\" [@animate]=\"{value:'*',params:{y:'120px',opacity:'0',delay:'100ms', duration: '400ms'}}\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <div class=\"p-4\">\r\n                <div class=\"auth-logo text-center mb-4\">\r\n                    <img src=\"./assets/images/landing/lOGO_d/logo_white.png\" alt=\"\">\r\n                </div>\r\n                <h1 class=\"mb-3 text-18\">Forgot Password</h1>\r\n                <form action=\"\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"email\">Email address</label>\r\n                        <input id=\"email\" class=\"form-control\" type=\"email\">\r\n                    </div>\r\n                    <button class=\"btn btn-primary btn-block mt-2\">Reset Password</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6 text-center \" style=\"background-size: cover;background-image: url(./assets/images/landing/Bg/bg.jpeg)\">\r\n            <div class=\"pr-3 auth-right\">\r\n                <button class=\"btn btn-primary btn-block btn-icon\" routerLink=\"/sessions/signup\">\r\n\r\n            Sign up with Email\r\n          </button>\r\n                <button class=\"btn btn-primary btn-block btn-icon  btn-google\">\r\n\r\n            Sign in with Google\r\n          </button>\r\n                <button class=\"btn btn-primary btn-block btn-icon btn-facebook\">\r\n\r\n            Sign in with Facebook\r\n          </button>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SharedAnimations } from 'src/app/shared/animations/shared-animations';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-loginstudent',\n  templateUrl: './loginstudent.component.html',\n  styleUrls: ['./loginstudent.component.scss'],\n  animations: [SharedAnimations]\n})\nexport class LoginstudentComponent implements OnInit {\n  error\n  constructor(private http: HttpClient,private dbService: NgxIndexedDBService,\n    private route: ActivatedRoute ,private router: Router,private toastr: ToastrService ) { }\n  isLoading =  false\n  ngOnInit() {\n  }\n  onLogin(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.http.post('https://namasteguru.herokuapp.com/api/auth/student/login',\n    {  \"email\": form.value.email,  \n       \"password\": form.value.password \n    })\n    .subscribe((succ: any )=>{\n      console.log(succ) \n      \n      this.dbService.clear('token').then(\n        () =>{\n          this.dbService.add( 'token' , {\n            contact: succ.data.contact,\n            email: succ.data.email,\n            name: succ.data.name,\n            role: succ.data.role,\n            token: succ.data.token,\n            uid: succ.data._id\n          })\n          .then(a=> {\n            this.toastr.success('logged in successfully')\n            console.log('added successfully')\n          this.router.navigateByUrl('/student/dashboard') \n        }, err=> console.log(err))\n        },\n         err=>{\n          console.log(err)\n         }\n      )\n    }, err=>{\n      console.log(err.error.message)\n      this.isLoading = false\n      this.error = err.error.message\n      this.toastr.error(this.error)\n    }\n    )\n      \n    // this.authService.login(form.value.email, form.value.password);\n  }\n}","\n\n<app-header-white></app-header-white>\n<div class=\"card o-hidden\" [@animate]=\"{value:'*',params:{y:'120px',opacity:'0',delay:'100ms', duration: '400ms'}}\">\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <div class=\"p-4\">\n                <div class=\"  text-center mb-4\">\n                    <img \n                    width=\"60%\"\n                    src=\"https://firebasestorage.googleapis.com/v0/b/homemade-de936.appspot.com/o/namastegurus.png?alt=media&token=d1695749-12c1-43f9-937f-38cc931ba848\" \n                    alt=\"\">\n                </div>\n                <h1 class=\"mb-3 text-18\">Sign In</h1>\n \n                <mat-spinner *ngIf=\"isLoading\" ></mat-spinner>\n                <form (submit)=\"onLogin(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\" style=\"font-size: smaller;\">\n                <mat-form-field  appearance=\"outline\">\n                    \n                    <mat-label>Email</mat-label><span matPrefix> <mat-icon>email</mat-icon></span>\n                    <input matInput name=\"email\"  maxlength=\"320\" minlength=\"6\" ngModel type=\"email\" placeholder=\"E-Mail\" #emailInput=\"ngModel\" [email]=\"true\" required email>\n                    <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\n                </mat-form-field> \n                <br><br>\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Password</mat-label><span matPrefix> <mat-icon>lock</mat-icon></span>\n                    <input [type]=\"hide ? 'password' : 'text'\"  maxlength=\"16\" minlength=\"1\" name=\"password\" ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\" required>\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon> \n                    </button>\n                    <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\n                </mat-form-field><br>\n                <mat-error *ngIf=\"error\">{{error}}</mat-error>\n\n                <a   routerLink=\"/auth/forgot\" style=\"text-decoration: none; color: black;\" routerLinkActive=\"active\" (click)=\"openDialog()\">Forgot Password</a><br>\n                <br>\n                <button mat-raised-button  color=\"primary\" type=\"submit\" style=\"color: black; background-color:rgba(3, 94, 230, 0.52) !important;\"  >Login</button>\n                </form>\n \n            </div>\n        </div>\n        <div class=\"col-md-6 text-center \" style=\"background-size: cover;background-image: url(./assets/images/landing/Bg/bg.jpeg)\">\n            <div class=\"pr-3 auth-right\">\n                <button class=\"btn btn-primary btn-block btn-icon btn-email\" routerLink=\"/auth/s/signup\">\n<!-- <i class=\"eva eva-email-outline\"></i> -->\n            Sign up with Email\n          </button> \n                <div class=\"mt-5\">\n                    <a class=\"text-white\" href=\"\" routerLink=\"/sessions/forgot\"><u>Forgot Password</u></a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { ForgotComponent } from './forgot/forgot.component';\r\nimport { LoginstudentComponent } from './loginstudent/loginstudent.component';\r\nimport { SignupstudentsComponent } from './signupstudents/signupstudents.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent\r\n  },\r\n  {\r\n    path: 's/signup',\r\n    component:  SignupstudentsComponent\r\n  },\r\n  {\r\n    path: 's/signin',\r\n    component:  LoginstudentComponent\r\n  },\r\n  {\r\n    path: 'signin',\r\n    component: SigninComponent\r\n  },\r\n  {\r\n    path: 'forgot',\r\n    component: ForgotComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SessionsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SessionsRoutingModule } from './sessions-routing.module';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { ForgotComponent } from './forgot/forgot.component';\r\nimport { LandingModule } from '../landing/landing.module'; \r\nimport { NgForm, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from 'src/app/shared/modules/angular-material.module';\nimport { LoginstudentComponent } from './loginstudent/loginstudent.component';\nimport { SignupstudentsComponent } from './signupstudents/signupstudents.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SessionsRoutingModule  ,\r\n    LandingModule ,\r\n    FormsModule ,\r\n    AngularMaterialModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [SignupComponent, SigninComponent, ForgotComponent, LoginstudentComponent, SignupstudentsComponent  ]\r\n})\r\nexport class SessionsModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SharedAnimations } from 'src/app/shared/animations/shared-animations';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxIndexedDBService } from 'ngx-indexed-db';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.scss'],\r\n  animations: [SharedAnimations]\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  error\r\n  constructor(private http: HttpClient,private dbService: NgxIndexedDBService,private toastr: ToastrService,\r\n    private route: ActivatedRoute ,private router: Router ) { }\r\n  isLoading =  false\r\n  ngOnInit() {\r\n  }\r\n  onSigninE(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    this.http.post('https://namasteguru.herokuapp.com/api/auth/faculty/login',\r\n    {  \"email\": form.value.email,  \r\n       \"password\": form.value.password \r\n    })\r\n    .subscribe((succ: any )=>{\r\n      console.log(succ)  \r\n      this.dbService.clear('token').then(\r\n        () =>{\r\n          this.dbService.add( 'token' , {\r\n            contact: succ.data.contact,\r\n            email: succ.data.email,\r\n            name: succ.data.name,\r\n            role: succ.data.role,\r\n            token: succ.data.token,\r\n            uid: succ.data._id\r\n          })\r\n          .then(a=> \r\n            {\r\n            console.log('added successfully')\r\n            this.router.navigateByUrl('/faculty/dashboard') \r\n            this.toastr.success('logged in successfully')\r\n          }, err=> console.log(err))\r\n        },\r\n         err=>{\r\n          console.log(err)\r\n         }\r\n      )\r\n    }, err=>{\r\n      console.log(err.error.message)\r\n      this.isLoading = false\r\n      this.error = err.error.message\r\n      this.toastr.error(this.error)\r\n    }\r\n    )\r\n    \r\n    // this.authService.login(form.value.email, form.value.password);\r\n  }\r\n}\r\n","<app-header-white></app-header-white>\r\n<div class=\"card o-hidden\" [@animate]=\"{value:'*',params:{y:'120px',opacity:'0',delay:'100ms', duration: '400ms'}}\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <div class=\"p-4\">\r\n                <div class=\"  text-center mb-4\">\r\n                    <img \r\n                    width=\"60%\"\r\n                    src=\"https://firebasestorage.googleapis.com/v0/b/homemade-de936.appspot.com/o/namastegurus.png?alt=media&token=d1695749-12c1-43f9-937f-38cc931ba848\" \r\n                    alt=\"\">\r\n                </div>\r\n                <h1 class=\"mb-3 text-18\">Sign In</h1>\r\n                <!-- <form action=\"\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"email\">Email address</label>\r\n                        <input id=\"email\" class=\"form-control\" type=\"email\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"password\">Password</label>\r\n                        <input id=\"password\" class=\"form-control\" type=\"password\">\r\n                    </div>\r\n                    <button class=\"btn btn-primary btn-block mt-2\">Sign In</button>\r\n                </form> -->\r\n                <mat-spinner *ngIf=\"isLoading\" ></mat-spinner>\r\n                <form (submit)=\"onSigninE(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\" style=\"font-size: smaller;\">\r\n                <mat-form-field  appearance=\"outline\">\r\n                    \r\n                    <mat-label>Email</mat-label><span matPrefix> <mat-icon>email</mat-icon></span>\r\n                    <input matInput name=\"email\"  maxlength=\"320\" minlength=\"6\" ngModel type=\"email\" placeholder=\"E-Mail\" #emailInput=\"ngModel\" [email]=\"true\" required email>\r\n                    <mat-error *ngIf=\"emailInput.invalid\">Please enter a valid email.</mat-error>\r\n                </mat-form-field> \r\n                <br><br>\r\n                <mat-form-field appearance=\"outline\">\r\n                    <mat-label>Password</mat-label><span matPrefix> <mat-icon>lock</mat-icon></span>\r\n                    <input [type]=\"hide ? 'password' : 'text'\"  maxlength=\"16\" minlength=\"1\" name=\"password\" ngModel matInput placeholder=\"Password\" #passwordInput=\"ngModel\" required>\r\n                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon> \r\n                    </button>\r\n                    <mat-error *ngIf=\"passwordInput.invalid\">Please enter a valid password.</mat-error>\r\n                </mat-form-field><br>\r\n                <mat-error *ngIf=\"error\">{{error}}</mat-error>\r\n\r\n                <a   routerLink=\"/auth/forgot\" style=\"text-decoration: none; color: black;\" routerLinkActive=\"active\" (click)=\"openDialog()\">Forgot Password</a><br>\r\n                <br>\r\n                <button mat-raised-button  color=\"primary\" type=\"submit\" style=\"color: black; background-color:rgba(3, 94, 230, 0.52) !important;\"  >Login</button>\r\n                </form>\r\n\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6 text-center \" style=\"background-size: cover;background-image: url(./assets/images/landing/Bg/bg.jpeg)\">\r\n            <div class=\"pr-3 auth-right\">\r\n                <button class=\"btn btn-primary btn-block btn-icon btn-email\" routerLink=\"/auth/signup\">\r\n<!-- <i class=\"eva eva-email-outline\"></i> -->\r\n            Sign up with Email\r\n          </button> \r\n                <div class=\"mt-5\">\r\n                    <a class=\"text-white\" href=\"\" routerLink=\"/sessions/forgot\"><u>Forgot Password</u></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { SharedAnimations } from 'src/app/shared/animations/shared-animations';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { Validators, FormGroup, FormBuilder, NgForm, AbstractControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss'],\r\n  animations: [SharedAnimations]\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  isLoading = false;\r\n  r;bounce\r\n  changePasswordForm: FormGroup;\r\n\r\n  constructor(  private router: ActivatedRoute,private route: Router, private http : HttpClient,private toastr: ToastrService,\r\n    private _formBuilder: FormBuilder) { \r\n    }\r\n  hide = true;\r\n  same = false\r\n  encoded\r\n  thirdFormGroup: FormGroup;\r\n  isLinear = true;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n    submited(stepper : MatStepper){ \r\n      this.onSendOtp(this.firstFormGroup.value.phone , stepper)\r\n    }\r\n    confirmOtp(stepper : MatStepper){\r\n      this.onCOtp(this.firstFormGroup.value.phone , this.secondFormGroup.value.secondCtrl, stepper)\r\n    }\r\n  ngOnInit() {\r\n    this.firstFormGroup = this._formBuilder.group({\r\n      name : ['', Validators.required],\r\n      phone : [ '' , Validators.required],\r\n      email : [ '', Validators.required],\r\n      password : [ '', Validators.required],\r\n      gender : ['', Validators.required],\r\n      confirmPassword: ['', Validators.required],\r\n    },{validator: this.passwordConfirming} );\r\n    this.secondFormGroup = this._formBuilder.group({\r\n      secondCtrl: ['', Validators.required]\r\n    }); \r\n    \r\n  }\r\n  passwordConfirming(c: AbstractControl): { invalid: boolean } {\r\n    if (c.get('password').value !== c.get('confirmPassword').value) {\r\n        return {invalid: true};\r\n    }\r\n  } \r\n\r\n  onSendOtp(n , stepper : MatStepper){\r\n    this.msg = ''\r\n    console.log(n)\r\n    this.http.post('https://namasteguru.herokuapp.com/api/auth/faculty/sendOTP',{\r\n      contact : \"\"+n\r\n    })\r\n    .toPromise()\r\n    .then((a: any )=>{ \r\n      this.otp = true\r\n      this.ph = true\r\n      this.encoded = a.OTP.Details\r\n      stepper.next()\r\n      // this.msg = 'verified phone number'\r\n      console.log(a)})\r\n    .catch(e=> {this.msg = e.error.message\r\n      this.toastr.error(this.msg)\r\n    console.log(e)})\r\n  }\r\n  otp = false\r\n  verified= false\r\n  ph =  false\r\n  msg = ''\r\n\r\n\r\n  onCOtp(n,o , stepper : MatStepper){\r\n    this.msg = ''\r\n    console.log('started')\r\n    this.http.post('https://namasteguru.herokuapp.com/api/auth/faculty/verifyOTP',{\r\n      encodedOtp :this.encoded,\r\n      contact : n,\r\n      cOtp : o\r\n\r\n    })\r\n    .toPromise()\r\n    .then(a=>{ this.otp = false ; this.verified = true; console.log(a)\r\n      this.onSignupE()\r\n      stepper.next()\r\n    })\r\n    .catch(e=> {this.msg = e.error.Details\r\n      this.toastr.error(this.msg)})\r\n  }\r\n\r\n\r\n  confirmPassword(event, pass){\r\n\r\n    if(event.target.value.length == pass.length){\r\n      console.log('s')\r\n      console.log(event.target.value)\r\n\r\n      console.log(pass)\r\n      if( event.target.value != pass)\r\n        this.same = true\r\n    }\r\n  }\r\n\r\n\r\n  onSignupE( ){ \r\n\r\n    this.msg= ''\r\n    // return \r\n     \r\n    if (this.firstFormGroup.invalid  ) {\r\n      return;\r\n    }\r\n    this.isLoading = true;  \r\n    console.log('submited')\r\n    const formData = new FormData()\r\n    formData.append('name',  this.firstFormGroup.value.name )\r\n    formData.append('email', this.firstFormGroup.value.email)\r\n    formData.append('contact', this.firstFormGroup.value.phone)\r\n    formData.append('gender', this.firstFormGroup.value.gender)\r\n    formData.append('password',this.firstFormGroup.value.password)\r\n    // formData.append('highest_degree',this.thirdFormGroup.value.degree)\r\n    // formData.append('short_profile_description',this.thirdFormGroup.value.description)\r\n\r\n    console.log(formData)\r\n    \r\n    this.http.post('https://namasteguru.herokuapp.com/api/auth/faculty/register',\r\n    formData\r\n     )\r\n    .subscribe((succ : any)=>{\r\n      \r\n      // this.route.navigateByUrl('verify')\r\n      this.msg = succ.message\r\n      this.toastr.success(this.msg)\r\n      console.log('success')\r\n      console.log(succ)\r\n      this.isLoading = false\r\n\r\n    }, error=>{   \r\n      console.log(error)\r\n      this.msg = error.error.data[0].msg\r\n      this.toastr.error(this.msg)\r\n      this.isLoading = false;  \r\n    })\r\n\r\n \r\n  }\r\n\r\n\r\n  async onSignup(form: NgForm) {\r\n    console.log(this.same)\r\n    if(this.same){\r\n      console.log('not same')\r\n      return \r\n    }\r\n\r\n    if (form.invalid) {\r\n      console.log('invalid')\r\n      return;\r\n    }\r\n    console.log(form.value)\r\n  \r\n    this.isLoading = true; \r\n    this.http.post('https://namasteguru.herokuapp.com/api/auth/student/register',\r\n    {\r\n      \"name\": form.value.user,     \r\n      \"email\" : form.value.email,     \r\n      \"contact\": form.value.number,     \r\n      \"password\": form.value.password,      \r\n      \"class\":form.value.grade,     \r\n      \"board\": form.value.board,     \r\n      \"medium\": form.value.medium,    \r\n      \"preffered_teaching_style\": form.value.style \r\n    })\r\n    .subscribe(succ=>{\r\n      this.isLoading = false\r\n      this.route.navigateByUrl('verify')\r\n      console.log('success')\r\n      console.log(succ)\r\n\r\n    }, error=>{   \r\n      this.r = error.error.data[0].msg\r\n      this.isLoading = false;  \r\n    })\r\n\r\n    // this.authService.createUser(form.value.email, form.value.password)\r\n    //   .then(error=>{\r\n    //     if(error== true){\r\n    //     }\r\n    //     else {\r\n    //       console.log(error)\r\n    //       this.r = error\r\n    //       this.isLoading = false;\r\n    //     }\r\n    //   })\r\n  }\r\n\r\n}\r\n","<app-header-white></app-header-white>\r\n<br><br><br><br>\r\n<div class=\"card o-hidden\" [@animate]=\"{value:'*',params:{y:'120px',opacity:'0',delay:'100ms', duration: '400ms'}}\">\r\n    <div class=\"row\" style=\" min-height: 60vh;\">\r\n        <div class=\" s col-md-4 text-center \" \r\n        style=\"background-size: cover;background-image: url(./assets/images/landing/Bg/bg.jpeg)\">\r\n            <div class=\"pl-3 auth-right\">\r\n                <button class=\"btn btn-primary btn-block btn-icon\" routerLink=\"/auth/signin\">\r\n\r\n          Sign in with Email\r\n        </button>\r\n   \r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-8\">\r\n            <div class=\"p-0\" style=\"font-size: smaller;\">\r\n                <div class=\"  text-center mb-4\">\r\n                    <img \r\n                    width=\"60%\"\r\n                    src=\"https://firebasestorage.googleapis.com/v0/b/homemade-de936.appspot.com/o/namastegurus.png?alt=media&token=d1695749-12c1-43f9-937f-38cc931ba848\" \r\n                    alt=\"\">\r\n                </div>\r\n                <h1 class=\"mb-3 text-18\">Sign Up</h1>\r\n                <!-- <p class=\"mb-4 text-muted font-small\">Lorem ipsum dolor sit amet.</p> -->\r\n                <mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\r\n                    <mat-step [stepControl]=\"firstFormGroup\">\r\n                      <form [formGroup]=\"firstFormGroup\">\r\n                        <ng-template matStepLabel><span matTooltip=\"Fill out your name\">Fill out your name</span></ng-template>\r\n                        <!-- <mat-form-field>\r\n                          <mat-label>Name</mat-label>\r\n                          <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\r\n                        </mat-form-field> -->\r\n        \r\n                         <div class=\"row\">\r\n                             <div class=\"col-md-6\">\r\n                                <mat-form-field  appearance=\"outline\">\r\n                                    <mat-label>User Name</mat-label>\r\n                                    <input matInput formControlName=\"name\" maxlength=\"200\" minlength=\"4\"  \r\n                                     type=\"text\" placeholder=\"User Name\"    required >\r\n                                    <mat-error  >Please enter a valid user name.</mat-error>\r\n                                  </mat-form-field> \r\n                             </div>\r\n                             <div class=\"col-md-6\">\r\n                                <mat-form-field  appearance=\"outline\"><mat-label>Email</mat-label>\r\n                                    <input matInput formControlName=\"email\"  maxlength=\"320\" minlength=\"6\"  \r\n                                    type=\"email\" placeholder=\"E-Mail\"  [email]=\"true\" required email>\r\n                                    <mat-error >Please enter a valid email.</mat-error>\r\n                                  </mat-form-field>\r\n                             </div>\r\n                             <div class=\"col-md-6\">\r\n                                <mat-form-field  appearance=\"outline\"><mat-label>Phone Number</mat-label>\r\n                                    <input matInput   [disabled]=\"ph\"  maxlength=\"12\" formControlName=\"phone\"\r\n                                     minlength=\"10\" type=\"number\" placeholder=\"Phone number\"   required number>\r\n                                    <mat-error  >Please enter a valid phone number.</mat-error>\r\n                                  </mat-form-field> \r\n                  \r\n                             </div>\r\n                             <div class=\"col-md-6\">\r\n                                <mat-form-field   appearance=\"outline\" style=\"width: 100%;\">\r\n                                    <mat-label>Gender</mat-label>\r\n                                    <mat-select name=\"style\"  formControlName=\"gender\"      required>\r\n                                      \r\n                                      <mat-option value=\"Male\">Male</mat-option>\r\n                                      <mat-option value=\"Female\">Female</mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error  >Please select a Gender.</mat-error>\r\n                                  </mat-form-field>\r\n                             </div>\r\n                             \r\n                             <div class=\"col-md-6\">\r\n                                <mat-form-field  appearance=\"outline\"><mat-label>Password</mat-label>\r\n                                    <input [type]=\"hide ? 'password' : 'text'\"  maxlength=\"16\" minlength=\"6\" \r\n                                    formControlName=\"password\"   matInput placeholder=\"Password\" required>\r\n                                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                                      <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon> \r\n                                    </button>\r\n                                    <mat-error >Please enter a valid password.</mat-error>\r\n                                  </mat-form-field>\r\n                             </div>\r\n                             <div class=\"col-md-6\">\r\n                                <mat-form-field appearance=\"outline\"><mat-label>Confirm Password</mat-label> \r\n                                    <input type=\"password\" matInput formControlName=\"confirmPassword\" placeholder=\"confirm Password\"\r\n                                           required>\r\n                                  </mat-form-field>\r\n                             </div>\r\n                         </div>\r\n                        \r\n\r\n                        \r\n                        <mat-error *ngIf=\"r=='w'\"> email is already used</mat-error>\r\n                         \r\n                        <p style=\"color: red;\">{{msg}}</p>\r\n                        <button mat-flat-button  (click)=\"submited(stepper)\" *ngIf=\"!otp\" style=\"background-color: rgba(3, 94, 230, 0.52) !important;\">Verify Phone Number</button>\r\n                        <br>\r\n                        <div>\r\n                          <button mat-raised-button matStepperNext  *ngIf=\" otp\"\r\n                           style=\"background-color: rgba(3, 94, 230, 0.52) !important; margin-top: 1vh; \"  >Next</button>\r\n                        </div>\r\n                      </form>\r\n                    </mat-step>\r\n                    <mat-step [stepControl]=\"secondFormGroup\">\r\n                      <form [formGroup]=\"secondFormGroup\">\r\n                        <ng-template matStepLabel>Otp</ng-template> \r\n                        {{firstFormGroup.value.phone}}\r\n                        <mat-form-field   *ngIf=\"otp\" appearance=\"outline\"><mat-label>Otp</mat-label>\r\n                          <input matInput formControlName=\"secondCtrl\"  maxlength=\"12\" minlength=\"6\"  \r\n                          type=\"number\" placeholder=\"OTP\"   required number>\r\n                          <mat-error  >Please enter a valid OTP.</mat-error>\r\n                        </mat-form-field> \r\n         \r\n                        <p style=\"color: red;\">{{msg}}</p>\r\n        \r\n                        <div>\r\n                          <button mat-button matStepperPrevious  style=\"background-color: rgba(141, 143, 146, 0.52) !important; margin-top: 1vh; \" (click)=\"msg=''\">Change Phone number</button>\r\n                          <button mat-button  \r\n                          style=\"background-color: rgba(3, 94, 230, 0.52) !important; margin-top: 1vh; \"\r\n                            *ngIf=\"otp\" (click)=\"confirmOtp(stepper)\">Confirm Otp</button>\r\n                        </div>\r\n                      </form>\r\n                    </mat-step>\r\n                    <mat-step>\r\n                      <ng-template matStepLabel>More Details</ng-template>\r\n \r\n                          <h2 *ngIf=\"isLoading\" style=\"text-align: center;\">\r\n                         Confirming Please be patient\r\n                      </h2>\r\n                      <!-- <mat-spinner *ngIf=\"isLoading\"></mat-spinner> -->\r\n                      <div *ngIf=\"!isLoading\">\r\n                        <p>{{msg}}</p>\r\n                      </div >\r\n        \r\n        \r\n                      <!-- <img class=\"col-12\" src=\"https://cdn.dribbble.com/users/1154535/screenshots/3288650/dribbble-success-2.gif\"  \r\n                         alt=\"\"> \r\n                         <h2 style=\"text-align: center;\">\r\n                          Approve link in your email\r\n          \r\n                        </h2> -->\r\n                      <div>\r\n                        <!-- <button mat-button matStepperPrevious>Back</button>\r\n                        <button mat-button (click)=\"stepper.reset()\">Reset</button> -->\r\n                      </div>\r\n                    </mat-step>\r\n                  </mat-horizontal-stepper>\r\n        \r\n               \r\n                    \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- <button class=\"btn btn-primary btn-block mt-2\">Sign Up</button> -->","import { Component, OnInit } from '@angular/core';\nimport { SharedAnimations } from 'src/app/shared/animations/shared-animations';\nimport { MatStepper } from '@angular/material/stepper';\nimport { Validators, FormGroup, FormBuilder, NgForm, AbstractControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-signupstudents',\n  templateUrl: './signupstudents.component.html',\n  styleUrls: ['./signupstudents.component.scss'],\n  animations: [SharedAnimations]\n})\nexport class SignupstudentsComponent implements OnInit {\n  isLoading = false;\n  r;bounce\n  changePasswordForm: FormGroup;\n\n  constructor(  private router: ActivatedRoute,private route: Router, private http : HttpClient,\n    private _formBuilder: FormBuilder) { \n    }\n  hide = true;\n  same = false\n  encoded\n  thirdFormGroup: FormGroup;\n  isLinear = true;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n    submited(stepper : MatStepper){ \n      this.onSendOtp(this.firstFormGroup.value.phone , stepper)\n    }\n    confirmOtp(stepper : MatStepper){\n      this.onCOtp(this.firstFormGroup.value.phone , this.secondFormGroup.value.secondCtrl, stepper)\n    }\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      name : ['', Validators.required],\n      phone : [ '' , Validators.required],\n      email : [ '', Validators.required],\n      password : [ '', Validators.required],\n      gender : ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    },{validator: this.passwordConfirming} );\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    }); \n    this.thirdFormGroup = this._formBuilder.group({ \n      grade: ['', Validators.required],\n      board: ['', Validators.required],\n      medium: ['', Validators.required],\n      style: ['', Validators.required],\n    }); \n    \n  }\n  passwordConfirming(c: AbstractControl): { invalid: boolean } {\n    if (c.get('password').value !== c.get('confirmPassword').value) {\n        return {invalid: true};\n    }\n  } \n\n  onSendOtp(n , stepper : MatStepper){\n    this.msg = ''\n    console.log(n)\n    this.http.post('https://namasteguru.herokuapp.com/api/auth/student/sendOTP',{\n      contact : \"\"+n\n    })\n    .toPromise()\n    .then((a: any )=>{ \n      this.otp = true\n      this.ph = true\n      this.encoded = a.OTP.Details\n      stepper.next()\n      // this.msg = 'verified phone number'\n      console.log(a)})\n    .catch(e=> {this.msg = e.error.message\n    console.log(e)})\n  }\n  otp = false\n  verified= false\n  ph =  false\n  msg = ''\n\n\n  onCOtp(n,o , stepper : MatStepper){\n    this.msg = ''\n    console.log('started')\n    this.http.post('https://namasteguru.herokuapp.com/api/auth/student/verifyOTP',{\n      encodedOtp :this.encoded,\n      contact : n,\n      cOtp : o\n\n    })\n    .toPromise()\n    .then(a=>{ this.otp = false ; this.verified = true; console.log(a)\n \n      stepper.next()\n    })\n    .catch(e=> this.msg = e.error.Details)\n  }\n\n\n  confirmPassword(event, pass){\n\n    if(event.target.value.length == pass.length){\n      console.log('s')\n      console.log(event.target.value)\n\n      console.log(pass)\n      if( event.target.value != pass)\n        this.same = true\n    }\n  }\n\n\n  \n\n  async onSignup( ) {\n    this.msg= ''\n    // return \n     \n    if (this.firstFormGroup.invalid  ) {\n      return;\n    }\n    if (this.thirdFormGroup.invalid  ) {\n      return;\n    }\n    console.log(this.firstFormGroup.value.phone)\n    const formData = new FormData()\n    formData.append('name',  this.firstFormGroup.value.name )\n    formData.append('email', this.firstFormGroup.value.email)\n    formData.append('contact', this.firstFormGroup.value.phone)\n    formData.append('gender', this.firstFormGroup.value.gender)\n    formData.append('password',this.firstFormGroup.value.password)\n    formData.append('class',this.thirdFormGroup.value.grade)\n    formData.append('board',this.thirdFormGroup.value.board)\n    formData.append('medium',this.thirdFormGroup.value.medium)\n    formData.append('preffered_teaching_style',this.thirdFormGroup.value.style)\n\n\n    this.isLoading = true; \n    this.http.post('https://namasteguru.herokuapp.com/api/auth/student/register',\n    {\n      \"name\": this.firstFormGroup.value.name,     \n      \"email\" : this.firstFormGroup.value.email,     \n      \"contact\": this.firstFormGroup.value.phone,     \n      \"password\": this.firstFormGroup.value.password,      \n      \"class\":this.thirdFormGroup.value.grade,     \n      \"board\": this.thirdFormGroup.value.board,     \n      \"medium\": this.thirdFormGroup.value.medium,    \n      \"preffered_teaching_style\": this.thirdFormGroup.value.style \n    })\n    .subscribe((succ : any)=>{\n      this.msg = succ.message\n      console.log('success')\n      console.log(succ)\n      this.isLoading = false\n\n    }, error=>{   \n      this.r = error.error.data[0].msg\n      this.isLoading = false;  \n    })\n\n    // this.authService.createUser(form.value.email, form.value.password)\n    //   .then(error=>{\n    //     if(error== true){\n    //     }\n    //     else {\n    //       console.log(error)\n    //       this.r = error\n    //       this.isLoading = false;\n    //     }\n    //   })\n  }\n\n}","<app-header-white></app-header-white>\n<br><br><br><br>\n<div class=\"card o-hidden\" [@animate]=\"{value:'*',params:{y:'120px',opacity:'0',delay:'100ms', duration: '400ms'}}\">\n    <div class=\"row\" style=\" min-height: 60vh;\">\n        <div class=\" s col-md-4 text-center \" \n        style=\"background-size: cover;background-image: url(./assets/images/landing/Bg/bg.jpeg)\">\n            <div class=\"pl-3 auth-right\">\n                <button class=\"btn btn-primary btn-block btn-icon\" routerLink=\"/auth/signin\">\n\n          Sign in with Email\n        </button>\n   \n            </div>\n        </div>\n\n        <div class=\"col-md-8\">\n            <div class=\"p-0\" style=\"font-size: smaller;\">\n                <div class=\"  text-center mb-4\">\n                    <img \n                    width=\"60%\"\n                    src=\"https://firebasestorage.googleapis.com/v0/b/homemade-de936.appspot.com/o/namastegurus.png?alt=media&token=d1695749-12c1-43f9-937f-38cc931ba848\" \n                    alt=\"\">\n                </div>\n                <h1 class=\"mb-3 text-18\">Sign Up</h1>\n                <!-- <p class=\"mb-4 text-muted font-small\">Lorem ipsum dolor sit amet.</p> -->\n                <mat-horizontal-stepper [linear]=\"isLinear\" #stepper>\n                    <mat-step [stepControl]=\"firstFormGroup\">\n                      <form [formGroup]=\"firstFormGroup\">\n                        <ng-template matStepLabel><span matTooltip=\"Fill out your name\">Fill out your name</span></ng-template>\n                        <!-- <mat-form-field>\n                          <mat-label>Name</mat-label>\n                          <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\n                        </mat-form-field> -->\n        \n                         <div class=\"row\">\n                             <div class=\"col-md-6\">\n                                <mat-form-field  appearance=\"outline\">\n                                    <mat-label>User Name</mat-label>\n                                    <input matInput formControlName=\"name\" maxlength=\"200\" minlength=\"4\"  \n                                     type=\"text\" placeholder=\"User Name\"    required >\n                                    <mat-error  >Please enter a valid user name.</mat-error>\n                                  </mat-form-field> \n                             </div>\n                             <div class=\"col-md-6\">\n                                <mat-form-field  appearance=\"outline\"><mat-label>Email</mat-label>\n                                    <input matInput formControlName=\"email\"  maxlength=\"320\" minlength=\"6\"  \n                                    type=\"email\" placeholder=\"E-Mail\"  [email]=\"true\" required email>\n                                    <mat-error >Please enter a valid email.</mat-error>\n                                  </mat-form-field>\n                             </div>\n                             <div class=\"col-md-6\">\n                                <mat-form-field  appearance=\"outline\"><mat-label>Phone Number</mat-label>\n                                    <input matInput   [disabled]=\"ph\"  maxlength=\"12\" formControlName=\"phone\"\n                                     minlength=\"10\" type=\"number\" placeholder=\"Phone number\"   required number>\n                                    <mat-error  >Please enter a valid phone number.</mat-error>\n                                  </mat-form-field> \n                  \n                             </div>\n                             <div class=\"col-md-6\">\n                                <mat-form-field   appearance=\"outline\" style=\"width: 100%;\">\n                                    <mat-label>Gender</mat-label>\n                                    <mat-select name=\"style\"  formControlName=\"gender\"      required>\n                                      \n                                      <mat-option value=\"Male\">Male</mat-option>\n                                      <mat-option value=\"Female\">Female</mat-option>\n                                    </mat-select>\n                                    <mat-error  >Please select a Gender.</mat-error>\n                                  </mat-form-field>\n                             </div>\n                             \n                             <div class=\"col-md-6\">\n                                <mat-form-field  appearance=\"outline\"><mat-label>Password</mat-label>\n                                    <input [type]=\"hide ? 'password' : 'text'\"  maxlength=\"16\" minlength=\"6\" \n                                    formControlName=\"password\"   matInput placeholder=\"Password\" required>\n                                    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                                      <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon> \n                                    </button>\n                                    <mat-error >Please enter a valid password.</mat-error>\n                                  </mat-form-field>\n                             </div>\n                             <div class=\"col-md-6\">\n                                <mat-form-field appearance=\"outline\"><mat-label>Confirm Password</mat-label> \n                                    <input type=\"password\" matInput formControlName=\"confirmPassword\" placeholder=\"confirm Password\"\n                                           required>\n                                  </mat-form-field>\n                             </div>\n                         </div>\n                        \n\n                        \n                        <mat-error *ngIf=\"r=='w'\"> email is already used</mat-error>\n                         \n                        <p style=\"color: red;\">{{msg}}</p>\n                        <button mat-flat-button  (click)=\"submited(stepper)\" *ngIf=\"!otp\" style=\"background-color: rgba(3, 94, 230, 0.52) !important;\">Verify Phone Number</button>\n                        <br>\n                        <div>\n                          <button mat-raised-button matStepperNext  *ngIf=\" otp\"\n                           style=\"background-color: rgba(3, 94, 230, 0.52) !important; margin-top: 1vh; \"  >Next</button>\n                        </div>\n                      </form>\n                    </mat-step>\n                    <mat-step [stepControl]=\"secondFormGroup\">\n                      <form [formGroup]=\"secondFormGroup\">\n                        <ng-template matStepLabel>Otp</ng-template> \n                        {{firstFormGroup.value.phone}}\n                        <mat-form-field   *ngIf=\"otp\" appearance=\"outline\"><mat-label>Otp</mat-label>\n                          <input matInput formControlName=\"secondCtrl\"  maxlength=\"12\" minlength=\"6\"  \n                          type=\"number\" placeholder=\"OTP\"   required number>\n                          <mat-error  >Please enter a valid OTP.</mat-error>\n                        </mat-form-field> \n         \n                        <p style=\"color: red;\">{{msg}}</p>\n                        \n                        <div>\n                          <button mat-button matStepperPrevious \n                           style=\"background-color: rgba(141, 143, 146, 0.52) !important; margin-top: 1vh; \" \n                           (click)=\"msg=''\">Change Phone number</button>\n                          <button mat-button  \n                          style=\"background-color: rgba(3, 94, 230, 0.52) !important; margin-top: 1vh; \"\n                            *ngIf=\"otp\" (click)=\"confirmOtp(stepper)\">Confirm Otp</button>\n                        </div>\n                      </form>\n                    </mat-step>\n                    <mat-step [stepControl]=\"thirdFormGroup\">\n                      <form [formGroup]=\"thirdFormGroup\">\n                        <ng-template matStepLabel>Education Details</ng-template>  \n\n                       \n                        <h2>Education Details</h2>\n                        <mat-form-field  style=\"width: 50%;\">\n                          <mat-label>Grade</mat-label>\n                          <mat-select formControlName=\"grade\"      required>\n                            <mat-option value=\"6TH\">6TH</mat-option>\n                            <mat-option value=\"7TH\">7th</mat-option>\n                            <mat-option value=\"8TH\">8TH</mat-option>\n                            <mat-option value=\"9TH\">9th</mat-option> \n                            <mat-option value=\"10TH\">10TH</mat-option>\n                            <mat-option value=\"11TH\">11TH</mat-option> \n                            <mat-option value=\"12TH\">12th</mat-option>\n                            <mat-option value=\"Degree\">Degree</mat-option>\n                          </mat-select>\n                          <mat-error  >Please select an grade.</mat-error>\n                        </mat-form-field><br>\n              \n                        <mat-form-field  style=\"width: 50%;\">\n                          <mat-label>Board</mat-label>\n                          <mat-select formControlName=\"board\"  required>\n                            \n                            <mat-option value=\"CBSE\">CBSE</mat-option>\n                            <mat-option value=\"STATE\">SSC</mat-option> \n                            <mat-option value=\"ICSE\">ICSE</mat-option>\n                            <mat-option value=\"OTHER\">OTHER</mat-option> \n                          </mat-select>\n                          <mat-error  >Please select an board.</mat-error>\n                        </mat-form-field><br>\n              \n                        <mat-form-field  style=\"width: 50%;\">\n                          <mat-label>Medium</mat-label>\n                          <mat-select formControlName=\"medium\"   required>\n                            \n                            <mat-option value=\"English\">English</mat-option>\n                            <mat-option value=\"Telugu\">Telugu</mat-option>\n                            <mat-option value=\"Hindi\">Hindi</mat-option>\n                          </mat-select>\n                          <mat-error  >Please select an medium.</mat-error>\n                        </mat-form-field><br>\n                        \n                        <mat-form-field  style=\"width: 50%;\">\n                          <mat-label>Prefered Teaching</mat-label>\n                          <mat-select formControlName=\"style\"  required>\n                            \n                            <mat-option value=\"One to One\">One to one</mat-option>\n                            <mat-option value=\"One to One\">many</mat-option>\n                          </mat-select>\n                          <mat-error >Please select an teaching style.</mat-error>\n                        </mat-form-field><br>\n\n\n                        <p style=\"color: red;\">{{msg}}</p>\n                        \n                        <div> \n                          <button mat-button  \n                          style=\"background-color: rgba(3, 94, 230, 0.52) !important; margin-top: 1vh; \"\n                             matStepperNext  (click)=\"onSignup()\">Signup  </button>\n                        </div>\n                      </form>\n                    </mat-step>\n                    <mat-step>\n                      <ng-template matStepLabel>More Details</ng-template>\n \n                          <h2 *ngIf=\"isLoading\" style=\"text-align: center;\">\n                         Confirming Please be patient\n                      </h2>\n                      <!-- <mat-spinner *ngIf=\"isLoading\"></mat-spinner> -->\n                      <div *ngIf=\"!isLoading\">\n                        <p>{{msg}}</p>\n                      </div >\n        \n        \n                      <!-- <img class=\"col-12\" src=\"https://cdn.dribbble.com/users/1154535/screenshots/3288650/dribbble-success-2.gif\"  \n                         alt=\"\"> \n                         <h2 style=\"text-align: center;\">\n                          Approve link in your email\n          \n                        </h2> -->\n                      <div>\n                        <!-- <button mat-button matStepperPrevious>Back</button>\n                        <button mat-button (click)=\"stepper.reset()\">Reset</button> -->\n                      </div>\n                    </mat-step>\n                  </mat-horizontal-stepper>\n        \n               \n                    \n            </div>\n        </div>\n    </div>\n</div>\n"],"sourceRoot":"webpack:///"}